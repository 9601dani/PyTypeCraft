
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANY BOOLEAN BREAK CADENA COLON COMA CONCAT CONSOLE CONTINUE DECIMAL DISTINTO_QUE DIVIDE ELSE ENTERO FALSE FOR FUNCTION IF IGUAL INTERFACE LET LITERAL LOG L_CORCHETE L_LLAVE L_PAREN MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MOD NOT NULL NUMBER OF OR POTENCIA PUNTO RETURN R_CORCHETE R_LLAVE R_PAREN SEMI_COLON SPLIT STRING TIMES TOEXPONENTIAL TOFIXED TOLOWERCASE TOSTRING TOUPPERCASE TRIPLE_IGUAL TRUE WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion      : console_pro sc\n                        | declaration_instruction sc\n                        | assig_pro sc\n                        | if_pro sc\n                        | while_pro sc\n                        | for_pro sc\n                        | for_each_pro sc\n                        | interface_pro sc\n                        | continue_pro sc\n                        | break_pro sc\n                        | return_pro sc\n                        | function_pro sc\n                        | call_function_pro sc\n                        | sumadores scsc   : SEMI_COLON\n            |function_pro : FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVEfunction_pro : FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVEcall_function_pro    : LITERAL L_PAREN values R_PARENcall_function_pro    : LITERAL L_PAREN R_PARENvalues   : values COMA avalues   : aparameters_pro   : parameters_pro COMA parameter_proparameters_pro   : parameter_proparameter_pro    : LITERAL COLON typeparameter_pro    : LITERALcontinue_pro : CONTINUEbreak_pro : BREAKreturn_pro : RETURNreturn_pro : RETURN ainterface_pro    : INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVEinterface_atributos  : interface_atributos interface_atributo scinterface_atributos  : interface_atributo   : LITERAL COLON typeinterface_atributo   : LITERALdeclaration_instruction      : LET declaracion_listdeclaracion_list      : declaracion_list COMA assignacion_instructiondeclaracion_list      : assignacion_instructionassignacion_instruction      : LITERAL COLON type IGUAL aassignacion_instruction      : LITERAL COLON typeassignacion_instruction      : LITERAL IGUAL atype      : NUMBER\n                 | STRING\n                 | BOOLEAN\n                 | ANY\n                 | LITERALassig_pro      : LITERAL IGUAL aif_pro      : IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE L_LLAVE instrucciones R_LLAVEelse_pro      : while_pro      : WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVEfor_pro      : FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVE\n                    | FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVEfor_each_pro : FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVEfor_each_dec : LET LITERAL OF afor_each_dec : LET LITERAL COLON type OF aconsole_pro      : CONSOLE PUNTO LOG L_PAREN expresion R_PARENexpresion      : expresion COMA aexpresion      : aa      : a OR ba      : b b      : b AND c b      : c c      : NOT d c      : d  d     : d DISTINTO_QUE e\n                | d MENOR_QUE e\n                | d MENOR_IGUAL_QUE e\n                | d MAYOR_QUE e\n                | d MAYOR_IGUAL_QUE e\n                | d TRIPLE_IGUAL e  d     : e  e     : e MAS f\n                | e MENOS f  e     : f  f     : f TIMES g\n                | f DIVIDE g\n                | f MOD g\n                | f POTENCIA g f     : g f    : g PUNTO nativeFun L_PAREN expresion R_PAREN\n            | g PUNTO nativeFun L_PAREN R_PAREN g     : ENTERO g     : DECIMAL g     : CADENA g     : LITERAL g     : TRUE\n              | FALSE g     : call_function_pro\n              | array_pro\n              | interface_assi g     : L_PAREN a R_PAREN sumadores     : LITERAL MAS MAS\n                          | LITERAL MENOS MENOS interface_assi   : L_LLAVE atributos_assi R_LLAVEatributos_assi   : atributos_assi COMA LITERAL COLON aatributos_assi   : LITERAL COLON aarray_pro    : L_CORCHETE values R_CORCHETEnativeFun    : TOSTRING\n                    | TOFIXED\n                    | TOEXPONENTIAL\n                    | TOLOWERCASE\n                    | TOUPPERCASE\n                    | SPLIT\n                    | CONCAT'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[18,18,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,18,18,18,-34,18,-61,-42,18,18,18,-86,18,18,-54,-55,-58,-85,18,-21,-51,-20,18,18,18,18,18,18,-53,-56,-57,18,18,-54,-52,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,55,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[19,19,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,93,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,19,19,19,-34,19,-61,-42,19,19,19,-86,19,19,-54,-55,-58,-85,19,-21,-51,-20,19,19,19,19,19,19,-53,-56,-57,19,19,-54,-52,]),'LITERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,49,50,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,82,84,86,87,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,116,117,118,119,120,121,122,123,124,125,126,127,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,160,161,168,170,171,174,175,176,177,178,179,180,183,185,186,187,188,189,190,191,192,193,194,197,198,200,201,203,205,207,208,211,212,213,214,216,217,218,223,225,226,227,228,229,230,231,233,234,235,237,238,239,240,],[20,20,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,48,56,-30,-31,69,77,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,69,69,69,69,94,-33,-65,-67,69,-69,-76,-79,-84,69,-87,-88,-89,-90,-91,-92,-93,-94,-95,69,115,48,119,69,-50,-23,-97,-98,133,-36,69,69,-68,69,69,69,69,69,69,69,69,69,69,69,69,162,69,-40,-49,-43,-45,-46,-47,-48,-44,-22,69,69,69,177,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,181,69,69,20,20,20,69,119,-38,-34,-19,69,119,162,20,-61,69,-42,20,20,94,94,20,119,-35,-86,69,20,20,-54,-55,-58,69,-37,-85,20,-21,-51,-20,20,20,20,69,20,20,20,-53,-56,-57,20,20,-54,-52,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,219,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[21,21,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,21,21,21,-34,21,-61,-42,21,21,21,-86,21,21,-54,-55,-58,-85,21,-21,-51,224,-20,21,21,21,21,21,21,-53,-56,-57,21,21,-54,-52,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[22,22,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,22,22,22,-34,22,-61,-42,22,22,22,-86,22,22,-54,-55,-58,-85,22,-21,-51,-20,22,22,22,22,22,22,-53,-56,-57,22,22,-54,-52,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[23,23,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,23,23,23,-34,23,-61,-42,23,23,23,-86,23,23,-54,-55,-58,-85,23,-21,-51,-20,23,23,23,23,23,23,-53,-56,-57,23,23,-54,-52,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[24,24,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,24,24,24,-34,24,-61,-42,24,24,24,-86,24,24,-54,-55,-58,-85,24,-21,-51,-20,24,24,24,24,24,24,-53,-56,-57,24,24,-54,-52,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[25,25,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,25,25,25,-34,25,-61,-42,25,25,25,-86,25,25,-54,-55,-58,-85,25,-21,-51,-20,25,25,25,25,25,25,-53,-56,-57,25,25,-54,-52,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[26,26,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,26,26,26,-34,26,-61,-42,26,26,26,-86,26,26,-54,-55,-58,-85,26,-21,-51,-20,26,26,26,26,26,26,-53,-56,-57,26,26,-54,-52,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[27,27,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,27,27,27,-34,27,-61,-42,27,27,27,-86,27,27,-54,-55,-58,-85,27,-21,-51,-20,27,27,27,27,27,27,-53,-56,-57,27,27,-54,-52,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,170,171,174,178,186,187,189,190,191,194,200,203,205,207,208,211,214,216,217,218,223,225,226,227,229,230,231,233,234,235,237,238,239,240,],[28,28,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,28,28,28,-34,28,-61,-42,28,28,28,-86,28,28,-54,-55,-58,-85,28,-21,-51,-20,28,28,28,28,28,28,-53,-56,-57,28,28,-54,-52,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,178,187,189,200,207,208,211,214,217,218,223,233,234,235,239,240,],[0,-1,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-34,-61,-42,-86,-54,-55,-58,-85,-21,-51,-20,-53,-56,-57,-54,-52,]),'R_LLAVE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,95,98,114,118,119,120,121,122,123,124,125,126,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,177,178,179,182,187,189,190,191,194,198,200,205,207,208,211,213,214,215,216,217,218,223,229,230,231,233,234,235,238,239,240,],[-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,-36,-68,159,-40,-49,-43,-45,-46,-47,-48,-44,-22,178,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-38,-34,-19,-101,-61,-42,207,208,211,-35,-86,217,-54,-55,-58,-37,-85,-100,223,-21,-51,-20,233,234,235,-53,-56,-57,239,-54,-52,]),'SEMI_COLON':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,46,47,57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,86,87,90,91,98,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,172,173,177,178,179,187,189,196,200,207,208,211,213,214,217,218,223,233,234,235,239,240,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,-31,-32,-39,-41,-33,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,-23,-97,-98,130,131,-68,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,192,193,-38,-34,31,-61,-42,-43,-86,-54,-55,-58,-37,-85,-21,-51,-20,-53,-56,-57,-54,-52,]),'PUNTO':([18,64,66,67,68,69,70,71,72,73,74,84,126,157,158,159,],[45,111,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,-96,-102,-99,]),'IGUAL':([20,48,94,119,120,121,122,123,124,133,196,],[49,81,49,-49,168,-45,-46,-47,-48,81,168,]),'L_PAREN':([20,21,22,23,27,49,50,53,54,60,65,69,75,77,78,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,149,150,151,152,153,154,155,156,161,168,175,180,188,201,212,224,228,],[50,53,54,55,65,65,65,65,65,65,65,50,65,116,117,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,180,-103,-104,-105,-106,-107,-108,-109,65,65,65,65,65,65,65,228,65,]),'MAS':([20,51,62,63,64,66,67,68,69,70,71,72,73,74,84,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[51,86,105,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,105,105,105,105,105,105,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'MENOS':([20,52,62,63,64,66,67,68,69,70,71,72,73,74,84,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[52,87,106,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,106,106,106,106,106,106,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'NOT':([27,49,50,53,54,65,75,81,96,97,117,127,130,131,161,168,175,180,188,201,212,228,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ENTERO':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DECIMAL':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CADENA':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TRUE':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FALSE':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'L_CORCHETE':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'L_LLAVE':([27,49,50,53,54,56,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,128,129,130,131,132,161,164,168,175,180,184,188,201,212,219,220,221,228,236,],[76,76,76,76,76,95,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,170,171,76,76,174,76,186,76,76,76,203,76,76,76,225,226,227,76,237,]),'LOG':([45,],[78,]),'COMA':([46,47,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,83,84,85,98,113,114,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,162,163,165,166,167,169,182,189,196,199,200,202,204,206,214,215,],[79,-41,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,127,-23,-25,-68,127,160,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-29,185,-27,188,-63,-24,-101,-42,-43,188,-86,-28,-26,-62,-85,-100,]),'COLON':([48,115,133,162,177,181,],[80,161,176,183,197,201,]),'R_PAREN':([50,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,83,84,85,88,89,92,98,112,116,119,121,122,123,124,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,162,163,165,166,167,169,180,195,199,200,202,204,206,209,210,214,222,232,],[84,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-50,126,-23,-25,128,129,132,-68,157,164,-49,-45,-46,-47,-48,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-29,184,-27,187,-63,-24,200,-59,214,-86,-28,-26,-62,220,221,-85,-60,236,]),'OR':([57,58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,82,84,85,88,89,98,112,125,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,167,169,172,173,182,189,195,200,206,214,215,222,232,],[96,-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,96,-23,96,96,96,-68,96,96,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,96,96,96,96,96,96,96,-86,96,-85,96,96,96,]),'R_CORCHETE':([58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,84,85,98,113,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,169,200,214,],[-65,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-25,-68,158,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-24,-86,-85,]),'AND':([58,59,61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,135,136,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[97,-67,-69,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-68,-22,97,-66,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'DISTINTO_QUE':([61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[99,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,99,-22,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'MENOR_QUE':([61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[100,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,100,-22,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'MENOR_IGUAL_QUE':([61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[101,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,101,-22,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'MAYOR_QUE':([61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[102,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,102,-22,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'MAYOR_IGUAL_QUE':([61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[103,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,103,-22,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'TRIPLE_IGUAL':([61,62,63,64,66,67,68,69,70,71,72,73,74,84,98,126,137,138,139,140,141,142,143,144,145,146,147,148,157,158,159,200,214,],[104,-76,-79,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,104,-22,-70,-71,-72,-73,-74,-75,-77,-78,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'TIMES':([63,64,66,67,68,69,70,71,72,73,74,84,126,143,144,145,146,147,148,157,158,159,200,214,],[107,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,107,107,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'DIVIDE':([63,64,66,67,68,69,70,71,72,73,74,84,126,143,144,145,146,147,148,157,158,159,200,214,],[108,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,108,108,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'MOD':([63,64,66,67,68,69,70,71,72,73,74,84,126,143,144,145,146,147,148,157,158,159,200,214,],[109,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,109,109,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'POTENCIA':([63,64,66,67,68,69,70,71,72,73,74,84,126,143,144,145,146,147,148,157,158,159,200,214,],[110,-84,-87,-88,-89,-90,-91,-92,-93,-94,-95,-23,-22,110,110,-80,-81,-82,-83,-96,-102,-99,-86,-85,]),'NUMBER':([80,176,183,197,],[121,121,121,121,]),'STRING':([80,176,183,197,],[122,122,122,122,]),'BOOLEAN':([80,176,183,197,],[123,123,123,123,]),'ANY':([80,176,183,197,],[124,124,124,124,]),'TOSTRING':([111,],[150,]),'TOFIXED':([111,],[151,]),'TOEXPONENTIAL':([111,],[152,]),'TOLOWERCASE':([111,],[153,]),'TOUPPERCASE':([111,],[154,]),'SPLIT':([111,],[155,]),'CONCAT':([111,],[156,]),'OF':([119,121,122,123,124,133,196,],[-49,-45,-46,-47,-48,175,212,]),'ELSE':([207,239,],[219,219,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,170,171,174,186,203,225,226,227,237,],[2,190,191,194,205,216,229,230,231,238,]),'instruccion':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[3,29,3,3,3,3,29,29,29,3,29,29,3,3,3,29,29,29,3,29,]),'console_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_instruction':([0,2,55,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[5,5,90,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assig_pro':([0,2,55,170,171,174,186,190,191,192,193,194,203,205,216,225,226,227,229,230,231,237,238,],[6,6,91,6,6,6,6,6,6,209,210,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_each_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'interface_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'continue_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'break_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function_pro':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'call_function_pro':([0,2,27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,170,171,174,175,180,186,188,190,191,194,201,203,205,212,216,225,226,227,228,229,230,231,237,238,],[16,16,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,16,16,16,72,72,16,72,16,16,16,72,16,16,72,16,16,16,16,72,16,16,16,16,16,]),'sumadores':([0,2,170,171,174,186,190,191,194,203,205,216,225,226,227,229,230,231,237,238,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'sc':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,179,],[30,32,33,34,35,36,37,38,39,40,41,42,43,44,198,]),'declaracion_list':([19,93,],[46,46,]),'assignacion_instruction':([19,79,93,],[47,118,47,]),'a':([27,49,50,53,54,65,75,81,117,127,130,131,161,168,175,180,188,201,212,228,],[57,82,85,88,89,112,85,125,167,169,172,173,182,189,195,167,206,215,222,232,]),'b':([27,49,50,53,54,65,75,81,96,117,127,130,131,161,168,175,180,188,201,212,228,],[58,58,58,58,58,58,58,58,135,58,58,58,58,58,58,58,58,58,58,58,58,]),'c':([27,49,50,53,54,65,75,81,96,97,117,127,130,131,161,168,175,180,188,201,212,228,],[59,59,59,59,59,59,59,59,59,136,59,59,59,59,59,59,59,59,59,59,59,59,]),'d':([27,49,50,53,54,60,65,75,81,96,97,117,127,130,131,161,168,175,180,188,201,212,228,],[61,61,61,61,61,98,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'e':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,117,127,130,131,161,168,175,180,188,201,212,228,],[62,62,62,62,62,62,62,62,62,62,62,137,138,139,140,141,142,62,62,62,62,62,62,62,62,62,62,62,62,]),'f':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,117,127,130,131,161,168,175,180,188,201,212,228,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,143,144,63,63,63,63,63,63,63,63,63,63,63,63,]),'g':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,145,146,147,148,64,64,64,64,64,64,64,64,64,64,64,64,]),'array_pro':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'interface_assi':([27,49,50,53,54,60,65,75,81,96,97,99,100,101,102,103,104,105,106,107,108,109,110,117,127,130,131,161,168,175,180,188,201,212,228,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'values':([50,75,],[83,113,]),'for_each_dec':([55,],[92,]),'atributos_assi':([76,],[114,]),'type':([80,176,183,197,],[120,196,202,213,]),'interface_atributos':([95,],[134,]),'nativeFun':([111,],[149,]),'parameters_pro':([116,],[163,]),'parameter_pro':([116,185,],[165,204,]),'expresion':([117,180,],[166,199,]),'interface_atributo':([134,],[179,]),'else_pro':([207,239,],[218,240,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',283),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',287),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',294),
  ('instruccion -> console_pro sc','instruccion',2,'p_instruccion','grammar.py',301),
  ('instruccion -> declaration_instruction sc','instruccion',2,'p_instruccion','grammar.py',302),
  ('instruccion -> assig_pro sc','instruccion',2,'p_instruccion','grammar.py',303),
  ('instruccion -> if_pro sc','instruccion',2,'p_instruccion','grammar.py',304),
  ('instruccion -> while_pro sc','instruccion',2,'p_instruccion','grammar.py',305),
  ('instruccion -> for_pro sc','instruccion',2,'p_instruccion','grammar.py',306),
  ('instruccion -> for_each_pro sc','instruccion',2,'p_instruccion','grammar.py',307),
  ('instruccion -> interface_pro sc','instruccion',2,'p_instruccion','grammar.py',308),
  ('instruccion -> continue_pro sc','instruccion',2,'p_instruccion','grammar.py',309),
  ('instruccion -> break_pro sc','instruccion',2,'p_instruccion','grammar.py',310),
  ('instruccion -> return_pro sc','instruccion',2,'p_instruccion','grammar.py',311),
  ('instruccion -> function_pro sc','instruccion',2,'p_instruccion','grammar.py',312),
  ('instruccion -> call_function_pro sc','instruccion',2,'p_instruccion','grammar.py',313),
  ('instruccion -> sumadores sc','instruccion',2,'p_instruccion','grammar.py',314),
  ('sc -> SEMI_COLON','sc',1,'p_semi_colon','grammar.py',318),
  ('sc -> <empty>','sc',0,'p_semi_colon','grammar.py',319),
  ('function_pro -> FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',8,'p_instruccion_function','grammar.py',324),
  ('function_pro -> FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',7,'p_instruccion_function2','grammar.py',328),
  ('call_function_pro -> LITERAL L_PAREN values R_PAREN','call_function_pro',4,'p_instruccion_call_function','grammar.py',333),
  ('call_function_pro -> LITERAL L_PAREN R_PAREN','call_function_pro',3,'p_instruccion_call_function2','grammar.py',337),
  ('values -> values COMA a','values',3,'p_instruccion_values','grammar.py',347),
  ('values -> a','values',1,'p_instruccion_values2','grammar.py',350),
  ('parameters_pro -> parameters_pro COMA parameter_pro','parameters_pro',3,'p_instruccion_parameters','grammar.py',355),
  ('parameters_pro -> parameter_pro','parameters_pro',1,'p_instruccion_parameters2','grammar.py',358),
  ('parameter_pro -> LITERAL COLON type','parameter_pro',3,'p_instruccion_parameter','grammar.py',362),
  ('parameter_pro -> LITERAL','parameter_pro',1,'p_instruccion_parameter2','grammar.py',365),
  ('continue_pro -> CONTINUE','continue_pro',1,'p_instruccion_continue','grammar.py',370),
  ('break_pro -> BREAK','break_pro',1,'p_instruccion_break','grammar.py',374),
  ('return_pro -> RETURN','return_pro',1,'p_instruccion_return','grammar.py',377),
  ('return_pro -> RETURN a','return_pro',2,'p_instruccion_return2','grammar.py',381),
  ('interface_pro -> INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVE','interface_pro',5,'p_instruccion_declarationInterface','grammar.py',387),
  ('interface_atributos -> interface_atributos interface_atributo sc','interface_atributos',3,'p_instruccion_interfaceAtributos','grammar.py',391),
  ('interface_atributos -> <empty>','interface_atributos',0,'p_instruccion_interfaceAtributos2','grammar.py',394),
  ('interface_atributo -> LITERAL COLON type','interface_atributo',3,'p_intruccion_interfaceAtributo','grammar.py',397),
  ('interface_atributo -> LITERAL','interface_atributo',1,'p_instruccion_interfaceAtributo2','grammar.py',400),
  ('declaration_instruction -> LET declaracion_list','declaration_instruction',2,'p_instruccion_declarationInstruction','grammar.py',404),
  ('declaracion_list -> declaracion_list COMA assignacion_instruction','declaracion_list',3,'p_instruccion_declaracion_list','grammar.py',410),
  ('declaracion_list -> assignacion_instruction','declaracion_list',1,'p_instruccion_declaracion_list2','grammar.py',420),
  ('assignacion_instruction -> LITERAL COLON type IGUAL a','assignacion_instruction',5,'p_instruccion_assignacion_instruction','grammar.py',427),
  ('assignacion_instruction -> LITERAL COLON type','assignacion_instruction',3,'p_instruccion_assingnacion_instruction2','grammar.py',431),
  ('assignacion_instruction -> LITERAL IGUAL a','assignacion_instruction',3,'p_instruccion_assignacion_instruction3','grammar.py',435),
  ('type -> NUMBER','type',1,'p_instruccion_type','grammar.py',438),
  ('type -> STRING','type',1,'p_instruccion_type','grammar.py',439),
  ('type -> BOOLEAN','type',1,'p_instruccion_type','grammar.py',440),
  ('type -> ANY','type',1,'p_instruccion_type','grammar.py',441),
  ('type -> LITERAL','type',1,'p_instruccion_type','grammar.py',442),
  ('assig_pro -> LITERAL IGUAL a','assig_pro',3,'p_instruccion_assig_pro','grammar.py',446),
  ('if_pro -> IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','if_pro',8,'p_instruccion_if_pro','grammar.py',450),
  ('else_pro -> ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','else_pro',9,'p_instruccion_else_pro','grammar.py',456),
  ('else_pro -> ELSE L_LLAVE instrucciones R_LLAVE','else_pro',4,'p_instruccion_else_pro2','grammar.py',460),
  ('else_pro -> <empty>','else_pro',0,'p_instruccion_else_pro3','grammar.py',464),
  ('while_pro -> WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE','while_pro',7,'p_instruccion_while_pro','grammar.py',469),
  ('for_pro -> FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',474),
  ('for_pro -> FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',475),
  ('for_each_pro -> FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVE','for_each_pro',7,'p_instruccion_for_each_pro','grammar.py',482),
  ('for_each_dec -> LET LITERAL OF a','for_each_dec',4,'p_instruccion_fore_dec','grammar.py',485),
  ('for_each_dec -> LET LITERAL COLON type OF a','for_each_dec',6,'p_instruccion_fore_dec_type','grammar.py',488),
  ('console_pro -> CONSOLE PUNTO LOG L_PAREN expresion R_PAREN','console_pro',6,'p_instruccion_console','grammar.py',493),
  ('expresion -> expresion COMA a','expresion',3,'p_instruccion_expresion','grammar.py',498),
  ('expresion -> a','expresion',1,'p_instruccion_expresion2','grammar.py',501),
  ('a -> a OR b','a',3,'p_instruccion_expresion3','grammar.py',506),
  ('a -> b','a',1,'p_instruccion_expresion4','grammar.py',509),
  ('b -> b AND c','b',3,'p_instruccion_expresion5','grammar.py',513),
  ('b -> c','b',1,'p_instruccion_expresion6','grammar.py',517),
  ('c -> NOT d','c',2,'p_instruccion_expresion7','grammar.py',521),
  ('c -> d','c',1,'p_instruccion_expresion8','grammar.py',525),
  ('d -> d DISTINTO_QUE e','d',3,'p_instruccion_expresion9','grammar.py',529),
  ('d -> d MENOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',530),
  ('d -> d MENOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',531),
  ('d -> d MAYOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',532),
  ('d -> d MAYOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',533),
  ('d -> d TRIPLE_IGUAL e','d',3,'p_instruccion_expresion9','grammar.py',534),
  ('d -> e','d',1,'p_instruccion_expresion10','grammar.py',538),
  ('e -> e MAS f','e',3,'p_instruccion_expresion11','grammar.py',542),
  ('e -> e MENOS f','e',3,'p_instruccion_expresion11','grammar.py',543),
  ('e -> f','e',1,'p_instruccion_expresion12','grammar.py',547),
  ('f -> f TIMES g','f',3,'p_instruccion_expresion13','grammar.py',551),
  ('f -> f DIVIDE g','f',3,'p_instruccion_expresion13','grammar.py',552),
  ('f -> f MOD g','f',3,'p_instruccion_expresion13','grammar.py',553),
  ('f -> f POTENCIA g','f',3,'p_instruccion_expresion13','grammar.py',554),
  ('f -> g','f',1,'p_instruccion_expresion14','grammar.py',558),
  ('f -> g PUNTO nativeFun L_PAREN expresion R_PAREN','f',6,'p_instruccion_expresion15','grammar.py',562),
  ('f -> g PUNTO nativeFun L_PAREN R_PAREN','f',5,'p_instruccion_expresion15','grammar.py',563),
  ('g -> ENTERO','g',1,'p_instruccion_expresion16','grammar.py',572),
  ('g -> DECIMAL','g',1,'p_instruccion_expresion17','grammar.py',576),
  ('g -> CADENA','g',1,'p_instruccion_expresion18','grammar.py',580),
  ('g -> LITERAL','g',1,'p_instruccion_expresion19','grammar.py',584),
  ('g -> TRUE','g',1,'p_instruccion_expresion20','grammar.py',588),
  ('g -> FALSE','g',1,'p_instruccion_expresion20','grammar.py',589),
  ('g -> call_function_pro','g',1,'p_instruccion_expresion21','grammar.py',593),
  ('g -> array_pro','g',1,'p_instruccion_expresion21','grammar.py',594),
  ('g -> interface_assi','g',1,'p_instruccion_expresion21','grammar.py',595),
  ('g -> L_PAREN a R_PAREN','g',3,'p_instruccion_expresion24','grammar.py',598),
  ('sumadores -> LITERAL MAS MAS','sumadores',3,'p_instruccion_sumadores','grammar.py',602),
  ('sumadores -> LITERAL MENOS MENOS','sumadores',3,'p_instruccion_sumadores','grammar.py',603),
  ('interface_assi -> L_LLAVE atributos_assi R_LLAVE','interface_assi',3,'p_instruccion_interfaceAssi','grammar.py',612),
  ('atributos_assi -> atributos_assi COMA LITERAL COLON a','atributos_assi',5,'p_instruccion_inter_atributesAssi','grammar.py',617),
  ('atributos_assi -> LITERAL COLON a','atributos_assi',3,'p_instruccion_inter_atributesAssi2','grammar.py',620),
  ('array_pro -> L_CORCHETE values R_CORCHETE','array_pro',3,'p_instruccion_array_pro','grammar.py',624),
  ('nativeFun -> TOSTRING','nativeFun',1,'p_instruccion_nativas','grammar.py',631),
  ('nativeFun -> TOFIXED','nativeFun',1,'p_instruccion_nativas','grammar.py',632),
  ('nativeFun -> TOEXPONENTIAL','nativeFun',1,'p_instruccion_nativas','grammar.py',633),
  ('nativeFun -> TOLOWERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',634),
  ('nativeFun -> TOUPPERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',635),
  ('nativeFun -> SPLIT','nativeFun',1,'p_instruccion_nativas','grammar.py',636),
  ('nativeFun -> CONCAT','nativeFun',1,'p_instruccion_nativas','grammar.py',637),
]
