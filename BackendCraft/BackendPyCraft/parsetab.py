
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANY BOOLEAN BREAK CADENA COLON COMA CONCAT CONSOLE CONTINUE DECIMAL DISTINTO_QUE DIVIDE ELSE ENTERO FALSE FOR FUNCTION IF IGUAL INTERFACE LET LITERAL LOG L_CORCHETE L_LLAVE L_PAREN MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MOD NOT NULL NUMBER OF OR POTENCIA PUNTO RETURN R_CORCHETE R_LLAVE R_PAREN SEMI_COLON SPLIT STRING TIMES TOEXPONENTIAL TOFIXED TOLOWERCASE TOSTRING TOUPPERCASE TRIPLE_IGUAL TRUE WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion      : console_pro sc\n                        | declaration_instruction sc\n                        | assig_pro sc\n                        | if_pro sc\n                        | while_pro sc\n                        | for_pro sc\n                        | for_each_pro sc\n                        | interface_pro sc\n                        | continue_pro sc\n                        | break_pro sc\n                        | return_pro sc\n                        | function_pro sc\n                        | call_function_pro sc\n                        | sumadores scsc   : SEMI_COLON\n            |function_pro : FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVEfunction_pro : FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVEcall_function_pro    : LITERAL L_PAREN values R_PARENcall_function_pro    : LITERAL L_PAREN R_PARENvalues   : values COMA avalues   : aparameters_pro   : parameters_pro COMA parameter_proparameters_pro   : parameter_proparameter_pro    : LITERAL COLON typeparameter_pro    : LITERALcontinue_pro : CONTINUEbreak_pro : BREAKreturn_pro : RETURNreturn_pro : RETURN ainterface_pro    : INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVEinterface_atributos  : interface_atributos interface_atributo scinterface_atributos  : interface_atributo   : LITERAL COLON typeinterface_atributo   : LITERALdeclaration_instruction      : LET declaracion_listdeclaracion_list      : declaracion_list COMA assignacion_instructiondeclaracion_list      : assignacion_instructionassignacion_instruction      : LITERAL COLON type IGUAL aassignacion_instruction      : LITERAL COLON typeassignacion_instruction      : LITERAL IGUAL atype      : NUMBER\n                 | STRING\n                 | BOOLEAN\n                 | ANY\n                 | LITERALassig_pro      : LITERAL IGUAL aif_pro      : IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE L_LLAVE instrucciones R_LLAVEelse_pro      : while_pro      : WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVEfor_pro      : FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE\n                    | FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVEinDec_pro   : assig_pro\n                    | sumadoresfor_each_pro : FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVEfor_each_dec : LET LITERAL OF afor_each_dec : LET LITERAL COLON type OF aconsole_pro      : CONSOLE PUNTO LOG L_PAREN expresion R_PARENexpresion      : expresion COMA aexpresion      : aa      : a OR ba      : b b      : b AND c b      : c c      : NOT d c      : d  d     : d DISTINTO_QUE e\n                | d MENOR_QUE e\n                | d MENOR_IGUAL_QUE e\n                | d MAYOR_QUE e\n                | d MAYOR_IGUAL_QUE e\n                | d TRIPLE_IGUAL e  d     : e  e     : e MAS f\n                | e MENOS f  e     :  f  f     : MENOS g\n                | MAS g  f     : g  g     : g TIMES h\n                | g DIVIDE h\n                | g MOD h\n                | g POTENCIA h g     : h g    : h PUNTO nativeFun L_PAREN expresion R_PAREN\n            | h PUNTO nativeFun L_PAREN R_PAREN h     : ENTERO h     : DECIMAL h     : CADENA h     : LITERAL h     : TRUE\n              | FALSE h     : call_function_pro\n              | array_pro\n              | interface_assi h     : L_PAREN a R_PARENh    : array_val_proarray_val_pro    : LITERAL dimensionsdimensions   : dimensions L_CORCHETE a R_CORCHETEdimensions   : L_CORCHETE a R_CORCHETE sumadores     : LITERAL MAS MAS\n                          | LITERAL MENOS MENOS interface_assi   : L_LLAVE atributos_assi R_LLAVEatributos_assi   : atributos_assi COMA LITERAL COLON aatributos_assi   : LITERAL COLON aarray_pro    : L_CORCHETE values R_CORCHETEnativeFun    : TOSTRING\n                    | TOFIXED\n                    | TOEXPONENTIAL\n                    | TOLOWERCASE\n                    | TOUPPERCASE\n                    | SPLIT\n                    | CONCAT'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[18,18,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,18,18,18,-34,-105,18,-63,-42,18,18,18,-91,-104,18,18,-54,-55,-60,-90,18,-21,-51,-20,18,18,18,18,18,18,-53,-56,-57,18,18,-54,-52,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,55,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[19,19,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,97,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,19,19,19,-34,-105,19,-63,-42,19,19,19,-91,-104,19,19,-54,-55,-60,-90,19,-21,-51,-20,19,19,19,19,19,19,-53,-56,-57,19,19,-54,-52,]),'LITERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,49,50,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,88,90,91,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,124,125,126,127,128,129,130,131,132,133,134,135,138,139,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,166,168,169,170,171,178,180,181,184,185,186,187,188,189,190,192,195,197,198,199,200,201,202,203,204,205,206,209,210,212,213,214,216,218,220,221,227,228,229,230,232,233,234,239,241,242,243,244,245,246,247,249,250,251,253,254,255,256,],[20,20,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,48,56,-30,-31,72,81,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,72,72,72,72,98,-33,-67,-69,72,-71,-78,72,-81,72,-84,-89,72,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,72,123,48,127,72,-50,-23,-106,-107,141,-36,72,72,-70,72,72,72,72,72,72,72,72,-83,-82,72,72,72,72,-103,72,172,72,-40,-49,-43,-45,-46,-47,-48,-44,-22,72,72,72,187,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,72,-111,-108,193,72,72,20,20,20,72,127,-38,-34,-19,72,-105,127,172,20,-63,72,-42,20,20,225,225,20,127,-35,-91,-104,72,20,20,-54,-55,-60,72,-37,-90,20,-21,-51,-20,20,20,20,72,20,20,20,-53,-56,-57,20,20,-54,-52,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,235,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[21,21,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,21,21,21,-34,-105,21,-63,-42,21,21,21,-91,-104,21,21,-54,-55,-60,-90,21,-21,-51,240,-20,21,21,21,21,21,21,-53,-56,-57,21,21,-54,-52,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[22,22,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,22,22,22,-34,-105,22,-63,-42,22,22,22,-91,-104,22,22,-54,-55,-60,-90,22,-21,-51,-20,22,22,22,22,22,22,-53,-56,-57,22,22,-54,-52,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[23,23,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,23,23,23,-34,-105,23,-63,-42,23,23,23,-91,-104,23,23,-54,-55,-60,-90,23,-21,-51,-20,23,23,23,23,23,23,-53,-56,-57,23,23,-54,-52,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[24,24,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,24,24,24,-34,-105,24,-63,-42,24,24,24,-91,-104,24,24,-54,-55,-60,-90,24,-21,-51,-20,24,24,24,24,24,24,-53,-56,-57,24,24,-54,-52,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[25,25,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,25,25,25,-34,-105,25,-63,-42,25,25,25,-91,-104,25,25,-54,-55,-60,-90,25,-21,-51,-20,25,25,25,25,25,25,-53,-56,-57,25,25,-54,-52,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[26,26,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,26,26,26,-34,-105,26,-63,-42,26,26,26,-91,-104,26,26,-54,-55,-60,-90,26,-21,-51,-20,26,26,26,26,26,26,-53,-56,-57,26,26,-54,-52,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[27,27,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,27,27,27,-34,-105,27,-63,-42,27,27,27,-91,-104,27,27,-54,-55,-60,-90,27,-21,-51,-20,27,27,27,27,27,27,-53,-56,-57,27,27,-54,-52,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,180,181,184,188,192,198,199,201,202,203,206,212,213,216,218,220,221,227,230,232,233,234,239,241,242,243,245,246,247,249,250,251,253,254,255,256,],[28,28,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,28,28,28,-34,-105,28,-63,-42,28,28,28,-91,-104,28,28,-54,-55,-60,-90,28,-21,-51,-20,28,28,28,28,28,28,-53,-56,-57,28,28,-54,-52,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,188,192,199,201,212,213,220,221,227,230,233,234,239,249,250,251,255,256,],[0,-1,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-34,-105,-63,-42,-91,-104,-54,-55,-60,-90,-21,-51,-20,-53,-56,-57,-54,-52,]),'R_LLAVE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,99,102,111,112,119,122,126,127,128,129,130,131,132,133,134,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,187,188,189,192,194,199,201,202,203,206,210,212,213,218,220,221,227,229,230,231,232,233,234,239,245,246,247,249,250,251,254,255,256,],[-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,-36,-70,-83,-82,-103,169,-40,-49,-43,-45,-46,-47,-48,-44,-22,188,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-38,-34,-19,-105,-110,-63,-42,220,221,227,-35,-91,-104,233,-54,-55,-60,-37,-90,-109,239,-21,-51,-20,249,250,251,-53,-56,-57,255,-54,-52,]),'SEMI_COLON':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,94,95,102,111,112,119,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,182,183,187,188,189,192,199,201,208,212,213,220,221,227,229,230,233,234,239,249,250,251,255,256,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,-31,-32,-39,-41,-33,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,-23,-106,-107,138,139,-70,-83,-82,-103,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,204,205,-38,-34,31,-105,-63,-42,-43,-91,-104,-54,-55,-60,-37,-90,-21,-51,-20,-53,-56,-57,-54,-52,]),'PUNTO':([18,67,69,70,71,72,73,74,75,76,77,78,88,119,134,165,168,169,192,213,],[45,117,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,-103,-22,-101,-111,-108,-105,-104,]),'IGUAL':([20,48,98,127,128,129,130,131,132,141,208,225,],[49,85,49,-49,178,-45,-46,-47,-48,85,178,49,]),'L_PAREN':([20,21,22,23,27,49,50,53,54,60,63,65,68,72,79,81,82,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,157,158,159,160,161,162,163,164,166,171,178,185,190,200,214,228,240,244,],[50,53,54,55,68,68,68,68,68,68,68,68,68,50,68,124,125,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,190,-112,-113,-114,-115,-116,-117,-118,68,68,68,68,68,68,68,68,244,68,]),'MAS':([20,27,49,50,51,53,54,60,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,100,101,103,104,105,106,107,108,109,110,111,112,119,120,125,134,135,138,139,145,146,147,148,149,150,151,152,153,154,155,156,165,166,168,169,171,178,185,190,192,200,212,213,214,225,228,230,244,],[51,63,63,63,90,63,63,63,109,-81,-84,-89,63,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,63,63,-23,63,63,63,63,63,63,63,63,63,63,-83,-82,-103,63,63,-22,63,63,63,109,109,109,109,109,109,-79,-80,-85,-86,-87,-88,-101,63,-111,-108,63,63,63,63,-105,63,-91,-104,63,51,63,-90,63,]),'MENOS':([20,27,49,50,52,53,54,60,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,100,101,103,104,105,106,107,108,109,110,111,112,119,120,125,134,135,138,139,145,146,147,148,149,150,151,152,153,154,155,156,165,166,168,169,171,178,185,190,192,200,212,213,214,225,228,230,244,],[52,65,65,65,91,65,65,65,110,-81,-84,-89,65,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,65,65,-23,65,65,65,65,65,65,65,65,65,65,-83,-82,-103,65,65,-22,65,65,65,110,110,110,110,110,110,-79,-80,-85,-86,-87,-88,-101,65,-111,-108,65,65,65,65,-105,65,-91,-104,65,52,65,-90,65,]),'NOT':([27,49,50,53,54,68,79,85,100,101,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ENTERO':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'DECIMAL':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'CADENA':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TRUE':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FALSE':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'L_CORCHETE':([27,49,50,53,54,60,63,65,68,72,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,119,120,125,135,138,139,166,171,178,185,190,192,200,213,214,228,244,],[79,79,79,79,79,79,79,79,79,120,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,166,79,79,79,79,79,79,79,79,79,79,-105,79,-104,79,79,79,]),'L_LLAVE':([27,49,50,53,54,56,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,136,137,138,139,140,166,171,174,178,185,190,196,200,214,228,235,236,237,244,252,],[80,80,80,80,80,99,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,180,181,80,80,184,80,80,198,80,80,80,216,80,80,80,241,242,243,80,253,]),'LOG':([45,],[82,]),'COMA':([46,47,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,87,88,89,102,111,112,119,121,122,126,127,128,129,130,131,132,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,172,173,175,176,177,179,192,194,201,208,211,212,213,215,217,219,230,231,],[83,-41,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,135,-23,-25,-70,-83,-82,-103,135,170,-40,-49,-43,-45,-46,-47,-48,-44,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-29,197,-27,200,-65,-24,-105,-110,-42,-43,200,-91,-104,-28,-26,-64,-90,-109,]),'COLON':([48,123,141,172,187,193,],[84,171,186,195,209,214,]),'R_PAREN':([50,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,96,102,111,112,118,119,124,127,129,130,131,132,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,172,173,175,176,177,179,190,192,207,211,212,213,215,217,219,222,223,224,226,230,238,248,],[88,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-50,134,-23,-25,-106,-107,136,137,140,-70,-83,-82,165,-103,174,-49,-45,-46,-47,-48,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-29,196,-27,199,-65,-24,212,-105,-61,230,-91,-104,-28,-26,-64,236,-58,-59,237,-90,-62,252,]),'OR':([57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,89,92,93,102,111,112,118,119,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,167,168,169,177,179,182,183,191,192,194,201,207,212,213,219,230,231,238,248,],[100,-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,100,-23,100,100,100,-70,-83,-82,100,-103,100,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,100,-111,-108,100,100,100,100,100,-105,100,100,100,-91,-104,100,-90,100,100,100,]),'R_CORCHETE':([58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,89,102,111,112,119,121,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,167,168,169,179,191,192,212,213,230,],[-67,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,-25,-70,-83,-82,-103,168,-22,-66,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,192,-111,-108,-24,213,-105,-91,-104,-90,]),'AND':([58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[101,-69,-71,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,-70,-83,-82,-103,-22,101,-68,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'DISTINTO_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[103,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,103,-83,-82,-103,-22,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'MENOR_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[104,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,104,-83,-82,-103,-22,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'MENOR_IGUAL_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[105,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,105,-83,-82,-103,-22,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'MAYOR_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[106,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,106,-83,-82,-103,-22,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'MAYOR_IGUAL_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[107,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,107,-83,-82,-103,-22,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'TRIPLE_IGUAL':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,134,145,146,147,148,149,150,151,152,153,154,155,156,165,168,169,192,212,213,230,],[108,-78,-81,-84,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,108,-83,-82,-103,-22,-72,-73,-74,-75,-76,-77,-79,-80,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'TIMES':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,134,153,154,155,156,165,168,169,192,212,213,230,],[113,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,113,113,-103,-22,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'DIVIDE':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,134,153,154,155,156,165,168,169,192,212,213,230,],[114,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,114,114,-103,-22,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'MOD':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,134,153,154,155,156,165,168,169,192,212,213,230,],[115,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,115,115,-103,-22,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'POTENCIA':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,134,153,154,155,156,165,168,169,192,212,213,230,],[116,-89,-92,-93,-94,-95,-96,-97,-98,-99,-100,-102,-23,116,116,-103,-22,-85,-86,-87,-88,-101,-111,-108,-105,-91,-104,-90,]),'NUMBER':([84,186,195,209,],[129,129,129,129,]),'STRING':([84,186,195,209,],[130,130,130,130,]),'BOOLEAN':([84,186,195,209,],[131,131,131,131,]),'ANY':([84,186,195,209,],[132,132,132,132,]),'TOSTRING':([117,],[158,]),'TOFIXED':([117,],[159,]),'TOEXPONENTIAL':([117,],[160,]),'TOLOWERCASE':([117,],[161,]),'TOUPPERCASE':([117,],[162,]),'SPLIT':([117,],[163,]),'CONCAT':([117,],[164,]),'OF':([127,129,130,131,132,141,208,],[-49,-45,-46,-47,-48,185,228,]),'ELSE':([220,255,],[235,235,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,180,181,184,198,216,241,242,243,253,],[2,202,203,206,218,232,245,246,247,254,]),'instruccion':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[3,29,3,3,3,3,29,29,29,3,29,29,3,3,3,29,29,29,3,29,]),'console_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_instruction':([0,2,55,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[5,5,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assig_pro':([0,2,55,180,181,184,198,202,203,204,205,206,216,218,232,241,242,243,245,246,247,253,254,],[6,6,95,6,6,6,6,6,6,223,223,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_each_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'interface_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'continue_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'break_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function_pro':([0,2,180,181,184,198,202,203,206,216,218,232,241,242,243,245,246,247,253,254,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'call_function_pro':([0,2,27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,180,181,184,185,190,198,200,202,203,206,214,216,218,228,232,241,242,243,244,245,246,247,253,254,],[16,16,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,16,16,16,75,75,16,75,16,16,16,75,16,16,75,16,16,16,16,75,16,16,16,16,16,]),'sumadores':([0,2,180,181,184,198,202,203,204,205,206,216,218,232,241,242,243,245,246,247,253,254,],[17,17,17,17,17,17,17,17,224,224,17,17,17,17,17,17,17,17,17,17,17,17,]),'sc':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,189,],[30,32,33,34,35,36,37,38,39,40,41,42,43,44,210,]),'declaracion_list':([19,97,],[46,46,]),'assignacion_instruction':([19,83,97,],[47,126,47,]),'a':([27,49,50,53,54,68,79,85,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[57,86,89,92,93,118,89,133,167,177,179,182,183,191,194,201,207,177,219,231,238,248,]),'b':([27,49,50,53,54,68,79,85,100,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[58,58,58,58,58,58,58,58,143,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'c':([27,49,50,53,54,68,79,85,100,101,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[59,59,59,59,59,59,59,59,59,144,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'d':([27,49,50,53,54,60,68,79,85,100,101,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[61,61,61,61,61,102,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'e':([27,49,50,53,54,60,68,79,85,100,101,103,104,105,106,107,108,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[62,62,62,62,62,62,62,62,62,62,62,145,146,147,148,149,150,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'f':([27,49,50,53,54,60,68,79,85,100,101,103,104,105,106,107,108,109,110,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,151,152,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'g':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[66,66,66,66,66,66,111,112,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'h':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,153,154,155,156,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_pro':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'interface_assi':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'array_val_pro':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,135,138,139,166,171,178,185,190,200,214,228,244,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'values':([50,79,],[87,121,]),'for_each_dec':([55,],[96,]),'dimensions':([72,],[119,]),'atributos_assi':([80,],[122,]),'type':([84,186,195,209,],[128,208,215,229,]),'interface_atributos':([99,],[142,]),'nativeFun':([117,],[157,]),'parameters_pro':([124,],[173,]),'parameter_pro':([124,197,],[175,217,]),'expresion':([125,190,],[176,211,]),'interface_atributo':([142,],[189,]),'inDec_pro':([204,205,],[222,226,]),'else_pro':([220,255,],[234,256,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',285),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',289),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',296),
  ('instruccion -> console_pro sc','instruccion',2,'p_instruccion','grammar.py',303),
  ('instruccion -> declaration_instruction sc','instruccion',2,'p_instruccion','grammar.py',304),
  ('instruccion -> assig_pro sc','instruccion',2,'p_instruccion','grammar.py',305),
  ('instruccion -> if_pro sc','instruccion',2,'p_instruccion','grammar.py',306),
  ('instruccion -> while_pro sc','instruccion',2,'p_instruccion','grammar.py',307),
  ('instruccion -> for_pro sc','instruccion',2,'p_instruccion','grammar.py',308),
  ('instruccion -> for_each_pro sc','instruccion',2,'p_instruccion','grammar.py',309),
  ('instruccion -> interface_pro sc','instruccion',2,'p_instruccion','grammar.py',310),
  ('instruccion -> continue_pro sc','instruccion',2,'p_instruccion','grammar.py',311),
  ('instruccion -> break_pro sc','instruccion',2,'p_instruccion','grammar.py',312),
  ('instruccion -> return_pro sc','instruccion',2,'p_instruccion','grammar.py',313),
  ('instruccion -> function_pro sc','instruccion',2,'p_instruccion','grammar.py',314),
  ('instruccion -> call_function_pro sc','instruccion',2,'p_instruccion','grammar.py',315),
  ('instruccion -> sumadores sc','instruccion',2,'p_instruccion','grammar.py',316),
  ('sc -> SEMI_COLON','sc',1,'p_semi_colon','grammar.py',320),
  ('sc -> <empty>','sc',0,'p_semi_colon','grammar.py',321),
  ('function_pro -> FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',8,'p_instruccion_function','grammar.py',326),
  ('function_pro -> FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',7,'p_instruccion_function2','grammar.py',330),
  ('call_function_pro -> LITERAL L_PAREN values R_PAREN','call_function_pro',4,'p_instruccion_call_function','grammar.py',335),
  ('call_function_pro -> LITERAL L_PAREN R_PAREN','call_function_pro',3,'p_instruccion_call_function2','grammar.py',339),
  ('values -> values COMA a','values',3,'p_instruccion_values','grammar.py',349),
  ('values -> a','values',1,'p_instruccion_values2','grammar.py',352),
  ('parameters_pro -> parameters_pro COMA parameter_pro','parameters_pro',3,'p_instruccion_parameters','grammar.py',357),
  ('parameters_pro -> parameter_pro','parameters_pro',1,'p_instruccion_parameters2','grammar.py',364),
  ('parameter_pro -> LITERAL COLON type','parameter_pro',3,'p_instruccion_parameter','grammar.py',371),
  ('parameter_pro -> LITERAL','parameter_pro',1,'p_instruccion_parameter2','grammar.py',377),
  ('continue_pro -> CONTINUE','continue_pro',1,'p_instruccion_continue','grammar.py',383),
  ('break_pro -> BREAK','break_pro',1,'p_instruccion_break','grammar.py',387),
  ('return_pro -> RETURN','return_pro',1,'p_instruccion_return','grammar.py',390),
  ('return_pro -> RETURN a','return_pro',2,'p_instruccion_return2','grammar.py',394),
  ('interface_pro -> INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVE','interface_pro',5,'p_instruccion_declarationInterface','grammar.py',400),
  ('interface_atributos -> interface_atributos interface_atributo sc','interface_atributos',3,'p_instruccion_interfaceAtributos','grammar.py',404),
  ('interface_atributos -> <empty>','interface_atributos',0,'p_instruccion_interfaceAtributos2','grammar.py',409),
  ('interface_atributo -> LITERAL COLON type','interface_atributo',3,'p_intruccion_interfaceAtributo','grammar.py',413),
  ('interface_atributo -> LITERAL','interface_atributo',1,'p_instruccion_interfaceAtributo2','grammar.py',418),
  ('declaration_instruction -> LET declaracion_list','declaration_instruction',2,'p_instruccion_declarationInstruction','grammar.py',424),
  ('declaracion_list -> declaracion_list COMA assignacion_instruction','declaracion_list',3,'p_instruccion_declaracion_list','grammar.py',430),
  ('declaracion_list -> assignacion_instruction','declaracion_list',1,'p_instruccion_declaracion_list2','grammar.py',440),
  ('assignacion_instruction -> LITERAL COLON type IGUAL a','assignacion_instruction',5,'p_instruccion_assignacion_instruction','grammar.py',447),
  ('assignacion_instruction -> LITERAL COLON type','assignacion_instruction',3,'p_instruccion_assingnacion_instruction2','grammar.py',451),
  ('assignacion_instruction -> LITERAL IGUAL a','assignacion_instruction',3,'p_instruccion_assignacion_instruction3','grammar.py',455),
  ('type -> NUMBER','type',1,'p_instruccion_type','grammar.py',458),
  ('type -> STRING','type',1,'p_instruccion_type','grammar.py',459),
  ('type -> BOOLEAN','type',1,'p_instruccion_type','grammar.py',460),
  ('type -> ANY','type',1,'p_instruccion_type','grammar.py',461),
  ('type -> LITERAL','type',1,'p_instruccion_type','grammar.py',462),
  ('assig_pro -> LITERAL IGUAL a','assig_pro',3,'p_instruccion_assig_pro','grammar.py',466),
  ('if_pro -> IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','if_pro',8,'p_instruccion_if_pro','grammar.py',470),
  ('else_pro -> ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','else_pro',9,'p_instruccion_else_pro','grammar.py',476),
  ('else_pro -> ELSE L_LLAVE instrucciones R_LLAVE','else_pro',4,'p_instruccion_else_pro2','grammar.py',480),
  ('else_pro -> <empty>','else_pro',0,'p_instruccion_else_pro3','grammar.py',484),
  ('while_pro -> WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE','while_pro',7,'p_instruccion_while_pro','grammar.py',489),
  ('for_pro -> FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',494),
  ('for_pro -> FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',495),
  ('inDec_pro -> assig_pro','inDec_pro',1,'p_instruccion_in_dec_pro','grammar.py',503),
  ('inDec_pro -> sumadores','inDec_pro',1,'p_instruccion_in_dec_pro','grammar.py',504),
  ('for_each_pro -> FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVE','for_each_pro',7,'p_instruccion_for_each_pro','grammar.py',510),
  ('for_each_dec -> LET LITERAL OF a','for_each_dec',4,'p_instruccion_fore_dec','grammar.py',513),
  ('for_each_dec -> LET LITERAL COLON type OF a','for_each_dec',6,'p_instruccion_fore_dec_type','grammar.py',516),
  ('console_pro -> CONSOLE PUNTO LOG L_PAREN expresion R_PAREN','console_pro',6,'p_instruccion_console','grammar.py',521),
  ('expresion -> expresion COMA a','expresion',3,'p_instruccion_expresion','grammar.py',526),
  ('expresion -> a','expresion',1,'p_instruccion_expresion2','grammar.py',530),
  ('a -> a OR b','a',3,'p_instruccion_expresion3','grammar.py',535),
  ('a -> b','a',1,'p_instruccion_expresion4','grammar.py',538),
  ('b -> b AND c','b',3,'p_instruccion_expresion5','grammar.py',542),
  ('b -> c','b',1,'p_instruccion_expresion6','grammar.py',546),
  ('c -> NOT d','c',2,'p_instruccion_expresion7','grammar.py',550),
  ('c -> d','c',1,'p_instruccion_expresion8','grammar.py',554),
  ('d -> d DISTINTO_QUE e','d',3,'p_instruccion_expresion9','grammar.py',558),
  ('d -> d MENOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',559),
  ('d -> d MENOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',560),
  ('d -> d MAYOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',561),
  ('d -> d MAYOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',562),
  ('d -> d TRIPLE_IGUAL e','d',3,'p_instruccion_expresion9','grammar.py',563),
  ('d -> e','d',1,'p_instruccion_expresion10','grammar.py',567),
  ('e -> e MAS f','e',3,'p_instruccion_expresion11','grammar.py',571),
  ('e -> e MENOS f','e',3,'p_instruccion_expresion11','grammar.py',572),
  ('e -> f','e',1,'p_instruccion_expresion12','grammar.py',576),
  ('f -> MENOS g','f',2,'p_instruccion_expresion13','grammar.py',580),
  ('f -> MAS g','f',2,'p_instruccion_expresion13','grammar.py',581),
  ('f -> g','f',1,'p_instruccion_expresion14','grammar.py',588),
  ('g -> g TIMES h','g',3,'p_instruccion_expresion15','grammar.py',592),
  ('g -> g DIVIDE h','g',3,'p_instruccion_expresion15','grammar.py',593),
  ('g -> g MOD h','g',3,'p_instruccion_expresion15','grammar.py',594),
  ('g -> g POTENCIA h','g',3,'p_instruccion_expresion15','grammar.py',595),
  ('g -> h','g',1,'p_instruccion_expresion16','grammar.py',599),
  ('g -> h PUNTO nativeFun L_PAREN expresion R_PAREN','g',6,'p_instruccion_expresion17','grammar.py',603),
  ('g -> h PUNTO nativeFun L_PAREN R_PAREN','g',5,'p_instruccion_expresion17','grammar.py',604),
  ('h -> ENTERO','h',1,'p_instruccion_expresion18','grammar.py',613),
  ('h -> DECIMAL','h',1,'p_instruccion_expresion19','grammar.py',617),
  ('h -> CADENA','h',1,'p_instruccion_expresion20','grammar.py',621),
  ('h -> LITERAL','h',1,'p_instruccion_expresion21','grammar.py',625),
  ('h -> TRUE','h',1,'p_instruccion_expresion22','grammar.py',629),
  ('h -> FALSE','h',1,'p_instruccion_expresion22','grammar.py',630),
  ('h -> call_function_pro','h',1,'p_instruccion_expresion23','grammar.py',634),
  ('h -> array_pro','h',1,'p_instruccion_expresion23','grammar.py',635),
  ('h -> interface_assi','h',1,'p_instruccion_expresion23','grammar.py',636),
  ('h -> L_PAREN a R_PAREN','h',3,'p_instruccion_expresion24','grammar.py',639),
  ('h -> array_val_pro','h',1,'p_instruccion_expresion25','grammar.py',643),
  ('array_val_pro -> LITERAL dimensions','array_val_pro',2,'p_instruccion_array_val_pro','grammar.py',646),
  ('dimensions -> dimensions L_CORCHETE a R_CORCHETE','dimensions',4,'p_instruccion_dimensions','grammar.py',649),
  ('dimensions -> L_CORCHETE a R_CORCHETE','dimensions',3,'p_instruccion_dimensions2','grammar.py',652),
  ('sumadores -> LITERAL MAS MAS','sumadores',3,'p_instruccion_sumadores','grammar.py',655),
  ('sumadores -> LITERAL MENOS MENOS','sumadores',3,'p_instruccion_sumadores','grammar.py',656),
  ('interface_assi -> L_LLAVE atributos_assi R_LLAVE','interface_assi',3,'p_instruccion_interfaceAssi','grammar.py',665),
  ('atributos_assi -> atributos_assi COMA LITERAL COLON a','atributos_assi',5,'p_instruccion_inter_atributesAssi','grammar.py',670),
  ('atributos_assi -> LITERAL COLON a','atributos_assi',3,'p_instruccion_inter_atributesAssi2','grammar.py',673),
  ('array_pro -> L_CORCHETE values R_CORCHETE','array_pro',3,'p_instruccion_array_pro','grammar.py',677),
  ('nativeFun -> TOSTRING','nativeFun',1,'p_instruccion_nativas','grammar.py',684),
  ('nativeFun -> TOFIXED','nativeFun',1,'p_instruccion_nativas','grammar.py',685),
  ('nativeFun -> TOEXPONENTIAL','nativeFun',1,'p_instruccion_nativas','grammar.py',686),
  ('nativeFun -> TOLOWERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',687),
  ('nativeFun -> TOUPPERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',688),
  ('nativeFun -> SPLIT','nativeFun',1,'p_instruccion_nativas','grammar.py',689),
  ('nativeFun -> CONCAT','nativeFun',1,'p_instruccion_nativas','grammar.py',690),
]
