
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANY BOOLEAN BREAK CADENA COLON COMA CONCAT CONSOLE CONTINUE DECIMAL DISTINTO_QUE DIVIDE ELSE ENTERO FALSE FOR FUNCTION IF IGUAL INTERFACE LET LITERAL LOG L_CORCHETE L_LLAVE L_PAREN MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MOD NOT NULL NUMBER OF OR POTENCIA PUNTO RETURN R_CORCHETE R_LLAVE R_PAREN SEMI_COLON SPLIT STRING TIMES TOEXPONENTIAL TOFIXED TOLOWERCASE TOSTRING TOUPPERCASE TRIPLE_IGUAL TRUE WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion      : console_pro sc\n                        | declaration_instruction sc\n                        | assig_pro sc\n                        | if_pro sc\n                        | while_pro sc\n                        | for_pro sc\n                        | for_each_pro sc\n                        | interface_pro sc\n                        | continue_pro sc\n                        | break_pro sc\n                        | return_pro sc\n                        | function_pro sc\n                        | call_function_pro sc\n                        | sumadores scsc   : SEMI_COLON\n            |function_pro : FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVEfunction_pro : FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVEcall_function_pro    : LITERAL L_PAREN values R_PARENcall_function_pro    : LITERAL L_PAREN R_PARENvalues   : values COMA avalues   : aparameters_pro   : parameters_pro COMA parameter_proparameters_pro   : parameter_proparameter_pro    : LITERAL COLON typeparameter_pro    : LITERALcontinue_pro : CONTINUEbreak_pro : BREAKreturn_pro : RETURNreturn_pro : RETURN ainterface_pro    : INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVEinterface_atributos  : interface_atributos interface_atributo scinterface_atributos  : interface_atributo   : LITERAL COLON typeinterface_atributo   : LITERALdeclaration_instruction      : LET declaracion_listdeclaracion_list      : declaracion_list COMA assignacion_instructiondeclaracion_list      : assignacion_instructionassignacion_instruction      : LITERAL COLON type IGUAL aassignacion_instruction      : LITERAL COLON typeassignacion_instruction      : LITERAL IGUAL atype      : NUMBER\n                 | STRING\n                 | BOOLEAN\n                 | ANY\n                 | LITERALassig_pro      : LITERAL IGUAL aif_pro      : IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE L_LLAVE instrucciones R_LLAVEelse_pro      : while_pro      : WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVEfor_pro      : FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVE\n                    | FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVEfor_each_pro : FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVEfor_each_dec : LET LITERAL OF afor_each_dec : LET LITERAL COLON type OF aconsole_pro      : CONSOLE PUNTO LOG L_PAREN expresion R_PARENexpresion      : expresion COMA aexpresion      : aa      : a OR ba      : b b      : b AND c b      : c c      : NOT d c      : d  d     : d DISTINTO_QUE e\n                | d MENOR_QUE e\n                | d MENOR_IGUAL_QUE e\n                | d MAYOR_QUE e\n                | d MAYOR_IGUAL_QUE e\n                | d TRIPLE_IGUAL e  d     : e  e     : e MAS f\n                | e MENOS f  e     :  f  f     : MENOS g\n                | MAS g  f     : g  g     : g TIMES h\n                | g DIVIDE h\n                | g MOD h\n                | g POTENCIA h g     : h g    : h PUNTO nativeFun L_PAREN expresion R_PAREN\n            | h PUNTO nativeFun L_PAREN R_PAREN h     : ENTERO h     : DECIMAL h     : CADENA h     : LITERAL h     : TRUE\n              | FALSE h     : call_function_pro\n              | array_pro\n              | interface_assi h     : L_PAREN a R_PAREN sumadores     : LITERAL MAS MAS\n                          | LITERAL MENOS MENOS interface_assi   : L_LLAVE atributos_assi R_LLAVEatributos_assi   : atributos_assi COMA LITERAL COLON aatributos_assi   : LITERAL COLON aarray_pro    : L_CORCHETE values R_CORCHETEnativeFun    : TOSTRING\n                    | TOFIXED\n                    | TOEXPONENTIAL\n                    | TOLOWERCASE\n                    | TOUPPERCASE\n                    | SPLIT\n                    | CONCAT'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[18,18,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,18,18,18,-34,18,-61,-42,18,18,18,-89,18,18,-54,-55,-58,-88,18,-21,-51,-20,18,18,18,18,18,18,-53,-56,-57,18,18,-54,-52,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,55,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[19,19,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,96,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,19,19,19,-34,19,-61,-42,19,19,19,-89,19,19,-54,-55,-58,-88,19,-21,-51,-20,19,19,19,19,19,19,-53,-56,-57,19,19,-54,-52,]),'LITERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,49,50,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,87,89,90,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,121,122,123,124,125,126,127,128,129,130,131,132,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,165,166,173,175,176,179,180,181,182,183,184,185,188,190,191,192,193,194,195,196,197,198,199,202,203,205,206,208,210,212,213,216,217,218,219,221,222,223,228,230,231,232,233,234,235,236,238,239,240,242,243,244,245,],[20,20,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,48,56,-30,-31,72,80,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,72,72,72,72,97,-33,-65,-67,72,-69,-76,72,-79,72,-82,-87,72,-90,-91,-92,-93,-94,-95,-96,-97,-98,72,120,48,124,72,-50,-23,-100,-101,138,-36,72,72,-68,72,72,72,72,72,72,72,72,-81,-80,72,72,72,72,167,72,-40,-49,-43,-45,-46,-47,-48,-44,-22,72,72,72,182,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,186,72,72,20,20,20,72,124,-38,-34,-19,72,124,167,20,-61,72,-42,20,20,97,97,20,124,-35,-89,72,20,20,-54,-55,-58,72,-37,-88,20,-21,-51,-20,20,20,20,72,20,20,20,-53,-56,-57,20,20,-54,-52,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,224,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[21,21,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,21,21,21,-34,21,-61,-42,21,21,21,-89,21,21,-54,-55,-58,-88,21,-21,-51,229,-20,21,21,21,21,21,21,-53,-56,-57,21,21,-54,-52,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[22,22,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,22,22,22,-34,22,-61,-42,22,22,22,-89,22,22,-54,-55,-58,-88,22,-21,-51,-20,22,22,22,22,22,22,-53,-56,-57,22,22,-54,-52,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[23,23,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,23,23,23,-34,23,-61,-42,23,23,23,-89,23,23,-54,-55,-58,-88,23,-21,-51,-20,23,23,23,23,23,23,-53,-56,-57,23,23,-54,-52,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[24,24,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,24,24,24,-34,24,-61,-42,24,24,24,-89,24,24,-54,-55,-58,-88,24,-21,-51,-20,24,24,24,24,24,24,-53,-56,-57,24,24,-54,-52,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[25,25,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,25,25,25,-34,25,-61,-42,25,25,25,-89,25,25,-54,-55,-58,-88,25,-21,-51,-20,25,25,25,25,25,25,-53,-56,-57,25,25,-54,-52,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[26,26,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,26,26,26,-34,26,-61,-42,26,26,26,-89,26,26,-54,-55,-58,-88,26,-21,-51,-20,26,26,26,26,26,26,-53,-56,-57,26,26,-54,-52,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[27,27,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,27,27,27,-34,27,-61,-42,27,27,27,-89,27,27,-54,-55,-58,-88,27,-21,-51,-20,27,27,27,27,27,27,-53,-56,-57,27,27,-54,-52,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,175,176,179,183,191,192,194,195,196,199,205,208,210,212,213,216,219,221,222,223,228,230,231,232,234,235,236,238,239,240,242,243,244,245,],[28,28,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,28,28,28,-34,28,-61,-42,28,28,28,-89,28,28,-54,-55,-58,-88,28,-21,-51,-20,28,28,28,28,28,28,-53,-56,-57,28,28,-54,-52,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,183,192,194,205,212,213,216,219,222,223,228,238,239,240,244,245,],[0,-1,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-34,-61,-42,-89,-54,-55,-58,-88,-21,-51,-20,-53,-56,-57,-54,-52,]),'R_LLAVE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,98,101,110,111,119,123,124,125,126,127,128,129,130,131,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,182,183,184,187,192,194,195,196,199,203,205,210,212,213,216,218,219,220,221,222,223,228,234,235,236,238,239,240,243,244,245,],[-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,-36,-68,-81,-80,164,-40,-49,-43,-45,-46,-47,-48,-44,-22,183,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-38,-34,-19,-104,-61,-42,212,213,216,-35,-89,222,-54,-55,-58,-37,-88,-103,228,-21,-51,-20,238,239,240,-53,-56,-57,244,-54,-52,]),'SEMI_COLON':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,46,47,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,89,90,93,94,101,110,111,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,177,178,182,183,184,192,194,201,205,212,213,216,218,219,222,223,228,238,239,240,244,245,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,-31,-32,-39,-41,-33,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,-23,-100,-101,135,136,-68,-81,-80,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,197,198,-38,-34,31,-61,-42,-43,-89,-54,-55,-58,-37,-88,-21,-51,-20,-53,-56,-57,-54,-52,]),'PUNTO':([18,67,69,70,71,72,73,74,75,76,77,87,131,162,163,164,],[45,116,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,-22,-99,-105,-102,]),'IGUAL':([20,48,97,124,125,126,127,128,129,138,201,],[49,84,49,-49,173,-45,-46,-47,-48,84,173,]),'L_PAREN':([20,21,22,23,27,49,50,53,54,60,63,65,68,72,78,80,81,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,154,155,156,157,158,159,160,161,166,173,180,185,193,206,217,229,233,],[50,53,54,55,68,68,68,68,68,68,68,68,68,50,68,121,122,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,185,-106,-107,-108,-109,-110,-111,-112,68,68,68,68,68,68,68,233,68,]),'MAS':([20,27,49,50,51,53,54,60,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,84,87,99,100,102,103,104,105,106,107,108,109,110,111,122,131,132,135,136,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,166,173,180,185,193,205,206,217,219,233,],[51,63,63,63,89,63,63,63,108,-79,-82,-87,63,-90,-91,-92,-93,-94,-95,-96,-97,-98,63,63,-23,63,63,63,63,63,63,63,63,63,63,-81,-80,63,-22,63,63,63,108,108,108,108,108,108,-77,-78,-83,-84,-85,-86,-99,-105,-102,63,63,63,63,63,-89,63,63,-88,63,]),'MENOS':([20,27,49,50,52,53,54,60,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,84,87,99,100,102,103,104,105,106,107,108,109,110,111,122,131,132,135,136,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,166,173,180,185,193,205,206,217,219,233,],[52,65,65,65,90,65,65,65,109,-79,-82,-87,65,-90,-91,-92,-93,-94,-95,-96,-97,-98,65,65,-23,65,65,65,65,65,65,65,65,65,65,-81,-80,65,-22,65,65,65,109,109,109,109,109,109,-77,-78,-83,-84,-85,-86,-99,-105,-102,65,65,65,65,65,-89,65,65,-88,65,]),'NOT':([27,49,50,53,54,68,78,84,99,100,122,132,135,136,166,173,180,185,193,206,217,233,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ENTERO':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'DECIMAL':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'CADENA':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TRUE':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FALSE':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'L_CORCHETE':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'L_LLAVE':([27,49,50,53,54,56,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,133,134,135,136,137,166,169,173,180,185,189,193,206,217,224,225,226,233,241,],[79,79,79,79,79,98,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,175,176,79,79,179,79,191,79,79,79,208,79,79,79,230,231,232,79,242,]),'LOG':([45,],[81,]),'COMA':([46,47,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,86,87,88,101,110,111,118,119,123,124,125,126,127,128,129,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,167,168,170,171,172,174,187,194,201,204,205,207,209,211,219,220,],[82,-41,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,132,-23,-25,-68,-81,-80,132,165,-40,-49,-43,-45,-46,-47,-48,-44,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-29,190,-27,193,-63,-24,-104,-42,-43,193,-89,-28,-26,-62,-88,-103,]),'COLON':([48,120,138,167,182,186,],[83,166,181,188,202,206,]),'R_PAREN':([50,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,86,87,88,91,92,95,101,110,111,117,121,124,126,127,128,129,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,167,168,170,171,172,174,185,200,204,205,207,209,211,214,215,219,227,237,],[87,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-50,131,-23,-25,133,134,137,-68,-81,-80,162,169,-49,-45,-46,-47,-48,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-29,189,-27,192,-63,-24,205,-59,219,-89,-28,-26,-62,225,226,-88,-60,241,]),'OR':([57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,85,87,88,91,92,101,110,111,117,130,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,172,174,177,178,187,194,200,205,211,219,220,227,237,],[99,-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,99,-23,99,99,99,-68,-81,-80,99,99,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,99,99,99,99,99,99,99,-89,99,-88,99,99,99,]),'R_CORCHETE':([58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,88,101,110,111,118,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,174,205,219,],[-65,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,-25,-68,-81,-80,163,-22,-64,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-24,-89,-88,]),'AND':([58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[100,-67,-69,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,-68,-81,-80,-22,100,-66,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'DISTINTO_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[102,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,102,-81,-80,-22,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'MENOR_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[103,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,103,-81,-80,-22,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'MENOR_IGUAL_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[104,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,104,-81,-80,-22,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'MAYOR_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[105,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,105,-81,-80,-22,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'MAYOR_IGUAL_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[106,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,106,-81,-80,-22,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'TRIPLE_IGUAL':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,87,101,110,111,131,142,143,144,145,146,147,148,149,150,151,152,153,162,163,164,205,219,],[107,-76,-79,-82,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,107,-81,-80,-22,-70,-71,-72,-73,-74,-75,-77,-78,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'TIMES':([66,67,69,70,71,72,73,74,75,76,77,87,110,111,131,150,151,152,153,162,163,164,205,219,],[112,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,112,112,-22,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'DIVIDE':([66,67,69,70,71,72,73,74,75,76,77,87,110,111,131,150,151,152,153,162,163,164,205,219,],[113,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,113,113,-22,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'MOD':([66,67,69,70,71,72,73,74,75,76,77,87,110,111,131,150,151,152,153,162,163,164,205,219,],[114,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,114,114,-22,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'POTENCIA':([66,67,69,70,71,72,73,74,75,76,77,87,110,111,131,150,151,152,153,162,163,164,205,219,],[115,-87,-90,-91,-92,-93,-94,-95,-96,-97,-98,-23,115,115,-22,-83,-84,-85,-86,-99,-105,-102,-89,-88,]),'NUMBER':([83,181,188,202,],[126,126,126,126,]),'STRING':([83,181,188,202,],[127,127,127,127,]),'BOOLEAN':([83,181,188,202,],[128,128,128,128,]),'ANY':([83,181,188,202,],[129,129,129,129,]),'TOSTRING':([116,],[155,]),'TOFIXED':([116,],[156,]),'TOEXPONENTIAL':([116,],[157,]),'TOLOWERCASE':([116,],[158,]),'TOUPPERCASE':([116,],[159,]),'SPLIT':([116,],[160,]),'CONCAT':([116,],[161,]),'OF':([124,126,127,128,129,138,201,],[-49,-45,-46,-47,-48,180,217,]),'ELSE':([212,244,],[224,224,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,175,176,179,191,208,230,231,232,242,],[2,195,196,199,210,221,234,235,236,243,]),'instruccion':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[3,29,3,3,3,3,29,29,29,3,29,29,3,3,3,29,29,29,3,29,]),'console_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_instruction':([0,2,55,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[5,5,93,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assig_pro':([0,2,55,175,176,179,191,195,196,197,198,199,208,210,221,230,231,232,234,235,236,242,243,],[6,6,94,6,6,6,6,6,6,214,215,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_each_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'interface_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'continue_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'break_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function_pro':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'call_function_pro':([0,2,27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,175,176,179,180,185,191,193,195,196,199,206,208,210,217,221,230,231,232,233,234,235,236,242,243,],[16,16,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,16,16,16,75,75,16,75,16,16,16,75,16,16,75,16,16,16,16,75,16,16,16,16,16,]),'sumadores':([0,2,175,176,179,191,195,196,199,208,210,221,230,231,232,234,235,236,242,243,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'sc':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,184,],[30,32,33,34,35,36,37,38,39,40,41,42,43,44,203,]),'declaracion_list':([19,96,],[46,46,]),'assignacion_instruction':([19,82,96,],[47,123,47,]),'a':([27,49,50,53,54,68,78,84,122,132,135,136,166,173,180,185,193,206,217,233,],[57,85,88,91,92,117,88,130,172,174,177,178,187,194,200,172,211,220,227,237,]),'b':([27,49,50,53,54,68,78,84,99,122,132,135,136,166,173,180,185,193,206,217,233,],[58,58,58,58,58,58,58,58,140,58,58,58,58,58,58,58,58,58,58,58,58,]),'c':([27,49,50,53,54,68,78,84,99,100,122,132,135,136,166,173,180,185,193,206,217,233,],[59,59,59,59,59,59,59,59,59,141,59,59,59,59,59,59,59,59,59,59,59,59,]),'d':([27,49,50,53,54,60,68,78,84,99,100,122,132,135,136,166,173,180,185,193,206,217,233,],[61,61,61,61,61,101,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'e':([27,49,50,53,54,60,68,78,84,99,100,102,103,104,105,106,107,122,132,135,136,166,173,180,185,193,206,217,233,],[62,62,62,62,62,62,62,62,62,62,62,142,143,144,145,146,147,62,62,62,62,62,62,62,62,62,62,62,62,]),'f':([27,49,50,53,54,60,68,78,84,99,100,102,103,104,105,106,107,108,109,122,132,135,136,166,173,180,185,193,206,217,233,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,148,149,64,64,64,64,64,64,64,64,64,64,64,64,]),'g':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,122,132,135,136,166,173,180,185,193,206,217,233,],[66,66,66,66,66,66,110,111,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'h':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,150,151,152,153,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_pro':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'interface_assi':([27,49,50,53,54,60,63,65,68,78,84,99,100,102,103,104,105,106,107,108,109,112,113,114,115,122,132,135,136,166,173,180,185,193,206,217,233,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'values':([50,78,],[86,118,]),'for_each_dec':([55,],[95,]),'atributos_assi':([79,],[119,]),'type':([83,181,188,202,],[125,201,207,218,]),'interface_atributos':([98,],[139,]),'nativeFun':([116,],[154,]),'parameters_pro':([121,],[168,]),'parameter_pro':([121,190,],[170,209,]),'expresion':([122,185,],[171,204,]),'interface_atributo':([139,],[184,]),'else_pro':([212,244,],[223,245,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',285),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',289),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',296),
  ('instruccion -> console_pro sc','instruccion',2,'p_instruccion','grammar.py',303),
  ('instruccion -> declaration_instruction sc','instruccion',2,'p_instruccion','grammar.py',304),
  ('instruccion -> assig_pro sc','instruccion',2,'p_instruccion','grammar.py',305),
  ('instruccion -> if_pro sc','instruccion',2,'p_instruccion','grammar.py',306),
  ('instruccion -> while_pro sc','instruccion',2,'p_instruccion','grammar.py',307),
  ('instruccion -> for_pro sc','instruccion',2,'p_instruccion','grammar.py',308),
  ('instruccion -> for_each_pro sc','instruccion',2,'p_instruccion','grammar.py',309),
  ('instruccion -> interface_pro sc','instruccion',2,'p_instruccion','grammar.py',310),
  ('instruccion -> continue_pro sc','instruccion',2,'p_instruccion','grammar.py',311),
  ('instruccion -> break_pro sc','instruccion',2,'p_instruccion','grammar.py',312),
  ('instruccion -> return_pro sc','instruccion',2,'p_instruccion','grammar.py',313),
  ('instruccion -> function_pro sc','instruccion',2,'p_instruccion','grammar.py',314),
  ('instruccion -> call_function_pro sc','instruccion',2,'p_instruccion','grammar.py',315),
  ('instruccion -> sumadores sc','instruccion',2,'p_instruccion','grammar.py',316),
  ('sc -> SEMI_COLON','sc',1,'p_semi_colon','grammar.py',320),
  ('sc -> <empty>','sc',0,'p_semi_colon','grammar.py',321),
  ('function_pro -> FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',8,'p_instruccion_function','grammar.py',326),
  ('function_pro -> FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',7,'p_instruccion_function2','grammar.py',330),
  ('call_function_pro -> LITERAL L_PAREN values R_PAREN','call_function_pro',4,'p_instruccion_call_function','grammar.py',335),
  ('call_function_pro -> LITERAL L_PAREN R_PAREN','call_function_pro',3,'p_instruccion_call_function2','grammar.py',339),
  ('values -> values COMA a','values',3,'p_instruccion_values','grammar.py',349),
  ('values -> a','values',1,'p_instruccion_values2','grammar.py',352),
  ('parameters_pro -> parameters_pro COMA parameter_pro','parameters_pro',3,'p_instruccion_parameters','grammar.py',357),
  ('parameters_pro -> parameter_pro','parameters_pro',1,'p_instruccion_parameters2','grammar.py',364),
  ('parameter_pro -> LITERAL COLON type','parameter_pro',3,'p_instruccion_parameter','grammar.py',371),
  ('parameter_pro -> LITERAL','parameter_pro',1,'p_instruccion_parameter2','grammar.py',377),
  ('continue_pro -> CONTINUE','continue_pro',1,'p_instruccion_continue','grammar.py',383),
  ('break_pro -> BREAK','break_pro',1,'p_instruccion_break','grammar.py',387),
  ('return_pro -> RETURN','return_pro',1,'p_instruccion_return','grammar.py',390),
  ('return_pro -> RETURN a','return_pro',2,'p_instruccion_return2','grammar.py',394),
  ('interface_pro -> INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVE','interface_pro',5,'p_instruccion_declarationInterface','grammar.py',400),
  ('interface_atributos -> interface_atributos interface_atributo sc','interface_atributos',3,'p_instruccion_interfaceAtributos','grammar.py',404),
  ('interface_atributos -> <empty>','interface_atributos',0,'p_instruccion_interfaceAtributos2','grammar.py',409),
  ('interface_atributo -> LITERAL COLON type','interface_atributo',3,'p_intruccion_interfaceAtributo','grammar.py',413),
  ('interface_atributo -> LITERAL','interface_atributo',1,'p_instruccion_interfaceAtributo2','grammar.py',418),
  ('declaration_instruction -> LET declaracion_list','declaration_instruction',2,'p_instruccion_declarationInstruction','grammar.py',424),
  ('declaracion_list -> declaracion_list COMA assignacion_instruction','declaracion_list',3,'p_instruccion_declaracion_list','grammar.py',430),
  ('declaracion_list -> assignacion_instruction','declaracion_list',1,'p_instruccion_declaracion_list2','grammar.py',440),
  ('assignacion_instruction -> LITERAL COLON type IGUAL a','assignacion_instruction',5,'p_instruccion_assignacion_instruction','grammar.py',447),
  ('assignacion_instruction -> LITERAL COLON type','assignacion_instruction',3,'p_instruccion_assingnacion_instruction2','grammar.py',451),
  ('assignacion_instruction -> LITERAL IGUAL a','assignacion_instruction',3,'p_instruccion_assignacion_instruction3','grammar.py',455),
  ('type -> NUMBER','type',1,'p_instruccion_type','grammar.py',458),
  ('type -> STRING','type',1,'p_instruccion_type','grammar.py',459),
  ('type -> BOOLEAN','type',1,'p_instruccion_type','grammar.py',460),
  ('type -> ANY','type',1,'p_instruccion_type','grammar.py',461),
  ('type -> LITERAL','type',1,'p_instruccion_type','grammar.py',462),
  ('assig_pro -> LITERAL IGUAL a','assig_pro',3,'p_instruccion_assig_pro','grammar.py',466),
  ('if_pro -> IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','if_pro',8,'p_instruccion_if_pro','grammar.py',470),
  ('else_pro -> ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','else_pro',9,'p_instruccion_else_pro','grammar.py',476),
  ('else_pro -> ELSE L_LLAVE instrucciones R_LLAVE','else_pro',4,'p_instruccion_else_pro2','grammar.py',480),
  ('else_pro -> <empty>','else_pro',0,'p_instruccion_else_pro3','grammar.py',484),
  ('while_pro -> WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE','while_pro',7,'p_instruccion_while_pro','grammar.py',489),
  ('for_pro -> FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',494),
  ('for_pro -> FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON assig_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',495),
  ('for_each_pro -> FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVE','for_each_pro',7,'p_instruccion_for_each_pro','grammar.py',502),
  ('for_each_dec -> LET LITERAL OF a','for_each_dec',4,'p_instruccion_fore_dec','grammar.py',505),
  ('for_each_dec -> LET LITERAL COLON type OF a','for_each_dec',6,'p_instruccion_fore_dec_type','grammar.py',508),
  ('console_pro -> CONSOLE PUNTO LOG L_PAREN expresion R_PAREN','console_pro',6,'p_instruccion_console','grammar.py',513),
  ('expresion -> expresion COMA a','expresion',3,'p_instruccion_expresion','grammar.py',518),
  ('expresion -> a','expresion',1,'p_instruccion_expresion2','grammar.py',522),
  ('a -> a OR b','a',3,'p_instruccion_expresion3','grammar.py',527),
  ('a -> b','a',1,'p_instruccion_expresion4','grammar.py',530),
  ('b -> b AND c','b',3,'p_instruccion_expresion5','grammar.py',534),
  ('b -> c','b',1,'p_instruccion_expresion6','grammar.py',538),
  ('c -> NOT d','c',2,'p_instruccion_expresion7','grammar.py',542),
  ('c -> d','c',1,'p_instruccion_expresion8','grammar.py',546),
  ('d -> d DISTINTO_QUE e','d',3,'p_instruccion_expresion9','grammar.py',550),
  ('d -> d MENOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',551),
  ('d -> d MENOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',552),
  ('d -> d MAYOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',553),
  ('d -> d MAYOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',554),
  ('d -> d TRIPLE_IGUAL e','d',3,'p_instruccion_expresion9','grammar.py',555),
  ('d -> e','d',1,'p_instruccion_expresion10','grammar.py',559),
  ('e -> e MAS f','e',3,'p_instruccion_expresion11','grammar.py',563),
  ('e -> e MENOS f','e',3,'p_instruccion_expresion11','grammar.py',564),
  ('e -> f','e',1,'p_instruccion_expresion12','grammar.py',568),
  ('f -> MENOS g','f',2,'p_instruccion_expresion13','grammar.py',572),
  ('f -> MAS g','f',2,'p_instruccion_expresion13','grammar.py',573),
  ('f -> g','f',1,'p_instruccion_expresion14','grammar.py',580),
  ('g -> g TIMES h','g',3,'p_instruccion_expresion15','grammar.py',583),
  ('g -> g DIVIDE h','g',3,'p_instruccion_expresion15','grammar.py',584),
  ('g -> g MOD h','g',3,'p_instruccion_expresion15','grammar.py',585),
  ('g -> g POTENCIA h','g',3,'p_instruccion_expresion15','grammar.py',586),
  ('g -> h','g',1,'p_instruccion_expresion16','grammar.py',590),
  ('g -> h PUNTO nativeFun L_PAREN expresion R_PAREN','g',6,'p_instruccion_expresion17','grammar.py',594),
  ('g -> h PUNTO nativeFun L_PAREN R_PAREN','g',5,'p_instruccion_expresion17','grammar.py',595),
  ('h -> ENTERO','h',1,'p_instruccion_expresion18','grammar.py',604),
  ('h -> DECIMAL','h',1,'p_instruccion_expresion19','grammar.py',608),
  ('h -> CADENA','h',1,'p_instruccion_expresion20','grammar.py',612),
  ('h -> LITERAL','h',1,'p_instruccion_expresion21','grammar.py',616),
  ('h -> TRUE','h',1,'p_instruccion_expresion22','grammar.py',620),
  ('h -> FALSE','h',1,'p_instruccion_expresion22','grammar.py',621),
  ('h -> call_function_pro','h',1,'p_instruccion_expresion23','grammar.py',625),
  ('h -> array_pro','h',1,'p_instruccion_expresion23','grammar.py',626),
  ('h -> interface_assi','h',1,'p_instruccion_expresion23','grammar.py',627),
  ('h -> L_PAREN a R_PAREN','h',3,'p_instruccion_expresion24','grammar.py',630),
  ('sumadores -> LITERAL MAS MAS','sumadores',3,'p_instruccion_sumadores','grammar.py',634),
  ('sumadores -> LITERAL MENOS MENOS','sumadores',3,'p_instruccion_sumadores','grammar.py',635),
  ('interface_assi -> L_LLAVE atributos_assi R_LLAVE','interface_assi',3,'p_instruccion_interfaceAssi','grammar.py',644),
  ('atributos_assi -> atributos_assi COMA LITERAL COLON a','atributos_assi',5,'p_instruccion_inter_atributesAssi','grammar.py',649),
  ('atributos_assi -> LITERAL COLON a','atributos_assi',3,'p_instruccion_inter_atributesAssi2','grammar.py',652),
  ('array_pro -> L_CORCHETE values R_CORCHETE','array_pro',3,'p_instruccion_array_pro','grammar.py',656),
  ('nativeFun -> TOSTRING','nativeFun',1,'p_instruccion_nativas','grammar.py',663),
  ('nativeFun -> TOFIXED','nativeFun',1,'p_instruccion_nativas','grammar.py',664),
  ('nativeFun -> TOEXPONENTIAL','nativeFun',1,'p_instruccion_nativas','grammar.py',665),
  ('nativeFun -> TOLOWERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',666),
  ('nativeFun -> TOUPPERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',667),
  ('nativeFun -> SPLIT','nativeFun',1,'p_instruccion_nativas','grammar.py',668),
  ('nativeFun -> CONCAT','nativeFun',1,'p_instruccion_nativas','grammar.py',669),
]
