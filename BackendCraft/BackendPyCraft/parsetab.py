
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANY BOOLEAN BREAK CADENA COLON COMA CONCAT CONSOLE CONTINUE DECIMAL DISTINTO_QUE DIVIDE ELSE ENTERO FALSE FOR FUNCTION IF IGUAL INTERFACE LET LITERAL LOG L_CORCHETE L_LLAVE L_PAREN MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MOD NOT NULL NUMBER OF OR POTENCIA PUNTO RETURN R_CORCHETE R_LLAVE R_PAREN SEMI_COLON SPLIT STRING TIMES TOEXPONENTIAL TOFIXED TOLOWERCASE TOSTRING TOUPPERCASE TRIPLE_IGUAL TRUE WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion      : console_pro sc\n                        | declaration_instruction sc\n                        | assig_pro sc\n                        | if_pro sc\n                        | while_pro sc\n                        | for_pro sc\n                        | for_each_pro sc\n                        | interface_pro sc\n                        | continue_pro sc\n                        | break_pro sc\n                        | return_pro sc\n                        | function_pro sc\n                        | call_function_pro sc\n                        | sumadores scsc   : SEMI_COLON\n            |function_pro : FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVEfunction_pro : FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVEcall_function_pro    : LITERAL L_PAREN values R_PARENcall_function_pro    : LITERAL L_PAREN R_PARENvalues   : values COMA avalues   : aparameters_pro   : parameters_pro COMA parameter_proparameters_pro   : parameter_proparameter_pro    : LITERAL COLON typeparameter_pro    : LITERALcontinue_pro : CONTINUEbreak_pro : BREAKreturn_pro : RETURNreturn_pro : RETURN ainterface_pro    : INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVEinterface_atributos  : interface_atributos interface_atributo scinterface_atributos  : interface_atributo   : LITERAL COLON typeinterface_atributo   : LITERALdeclaration_instruction      : LET declaracion_listdeclaracion_list      : declaracion_list COMA assignacion_instructiondeclaracion_list      : assignacion_instructionassignacion_instruction      : LITERAL COLON type IGUAL aassignacion_instruction      : LITERAL COLON typeassignacion_instruction      : LITERAL IGUAL aassignacion_instruction      : LITERALtype      : NUMBER\n                 | STRING\n                 | BOOLEAN\n                 | ANY\n                 | LITERAL\n                 | NULLassig_pro      : LITERAL IGUAL aif_pro      : IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_proelse_pro      : ELSE L_LLAVE instrucciones R_LLAVEelse_pro      : while_pro      : WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVEfor_pro      : FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE\n                    | FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVEinDec_pro   : assig_pro\n                    | sumadoresfor_each_pro : FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVEfor_each_dec : LET LITERAL OF afor_each_dec : LET LITERAL COLON type OF aconsole_pro      : CONSOLE PUNTO LOG L_PAREN expresion R_PARENexpresion      : expresion COMA aexpresion      : aa      : a OR ba      : b b      : b AND c b      : c c      : NOT d c      : d  d     : d DISTINTO_QUE e\n                | d MENOR_QUE e\n                | d MENOR_IGUAL_QUE e\n                | d MAYOR_QUE e\n                | d MAYOR_IGUAL_QUE e\n                | d TRIPLE_IGUAL e  d     : e  e     : e MAS f\n                | e MENOS f  e     :  f  f     : MENOS g\n                | MAS g  f     : g  g     : g TIMES h\n                | g DIVIDE h\n                | g MOD h\n                | g POTENCIA h g     : h g    : h PUNTO nativeFun L_PAREN expresion R_PAREN\n            | h PUNTO nativeFun L_PAREN R_PAREN h     : ENTERO h     : DECIMAL h     : CADENA h     : LITERAL h     : TRUE\n              | FALSE h     : call_function_pro\n              | array_pro\n              | interface_assi h     : L_PAREN a R_PARENh    : array_val_proarray_val_pro    : LITERAL dimensionsdimensions   : dimensions L_CORCHETE a R_CORCHETEdimensions   : L_CORCHETE a R_CORCHETE sumadores     : LITERAL MAS MAS\n                          | LITERAL MENOS MENOS interface_assi   : L_LLAVE atributos_assi R_LLAVEatributos_assi   : atributos_assi COMA LITERAL COLON aatributos_assi   : LITERAL COLON aarray_pro    : L_CORCHETE values R_CORCHETEnativeFun    : TOSTRING\n                    | TOFIXED\n                    | TOEXPONENTIAL\n                    | TOLOWERCASE\n                    | TOUPPERCASE\n                    | SPLIT\n                    | CONCAT'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[18,18,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,18,18,18,-34,-107,18,-65,-42,18,18,18,-93,-106,18,18,-56,-57,-62,-92,18,-21,-53,-20,18,18,18,18,18,18,-55,-58,-59,18,18,-56,-54,]),'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,55,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[19,19,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,97,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,19,19,19,-34,-107,19,-65,-42,19,19,19,-93,-106,19,19,-56,-57,-62,-92,19,-21,-53,-20,19,19,19,19,19,19,-55,-58,-59,19,19,-56,-54,]),'LITERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,88,90,91,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,167,169,170,171,172,179,181,182,185,186,187,188,189,190,191,193,196,198,199,200,201,202,203,204,205,206,207,210,211,213,214,215,217,219,221,222,228,229,230,231,233,234,235,240,242,243,244,245,246,247,248,250,251,252,254,255,256,257,],[20,20,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,48,56,-30,-31,72,81,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,72,72,72,72,98,-33,-69,-71,72,-73,-80,72,-83,72,-86,-91,72,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,72,123,48,127,72,-52,-23,-108,-109,142,-36,72,72,-72,72,72,72,72,72,72,72,72,-85,-84,72,72,72,72,-105,72,173,72,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,72,72,72,188,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,72,-113,-110,194,72,72,20,20,20,72,127,-38,-34,-19,72,-107,127,173,20,-65,72,-42,20,20,226,226,20,127,-35,-93,-106,72,20,20,-56,-57,-62,72,-37,-92,20,-21,-53,-20,20,20,20,72,20,20,20,-55,-58,-59,20,20,-56,-54,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,236,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[21,21,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,21,21,21,-34,-107,21,-65,-42,21,21,21,-93,-106,21,21,-56,-57,-62,-92,21,-21,-53,241,-20,21,21,21,21,21,21,-55,-58,-59,21,21,-56,-54,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[22,22,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,22,22,22,-34,-107,22,-65,-42,22,22,22,-93,-106,22,22,-56,-57,-62,-92,22,-21,-53,-20,22,22,22,22,22,22,-55,-58,-59,22,22,-56,-54,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[23,23,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,23,23,23,-34,-107,23,-65,-42,23,23,23,-93,-106,23,23,-56,-57,-62,-92,23,-21,-53,-20,23,23,23,23,23,23,-55,-58,-59,23,23,-56,-54,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[24,24,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,24,24,24,-34,-107,24,-65,-42,24,24,24,-93,-106,24,24,-56,-57,-62,-92,24,-21,-53,-20,24,24,24,24,24,24,-55,-58,-59,24,24,-56,-54,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[25,25,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,25,25,25,-34,-107,25,-65,-42,25,25,25,-93,-106,25,25,-56,-57,-62,-92,25,-21,-53,-20,25,25,25,25,25,25,-55,-58,-59,25,25,-56,-54,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[26,26,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,26,26,26,-34,-107,26,-65,-42,26,26,26,-93,-106,26,26,-56,-57,-62,-92,26,-21,-53,-20,26,26,26,26,26,26,-55,-58,-59,26,26,-56,-54,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[27,27,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,27,27,27,-34,-107,27,-65,-42,27,27,27,-93,-106,27,27,-56,-57,-62,-92,27,-21,-53,-20,27,27,27,27,27,27,-55,-58,-59,27,27,-56,-54,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,181,182,185,189,193,199,200,202,203,204,207,213,214,217,219,221,222,228,231,233,234,235,240,242,243,244,246,247,248,250,251,252,254,255,256,257,],[28,28,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,28,28,28,-34,-107,28,-65,-42,28,28,28,-93,-106,28,28,-56,-57,-62,-92,28,-21,-53,-20,28,28,28,28,28,28,-55,-58,-59,28,28,-56,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,102,111,112,119,126,127,128,129,130,131,132,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,189,193,200,202,213,214,221,222,228,231,234,235,240,250,251,252,256,257,],[0,-1,-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-34,-107,-65,-42,-93,-106,-56,-57,-62,-92,-21,-53,-20,-55,-58,-59,-56,-54,]),'R_LLAVE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,99,102,111,112,119,122,126,127,128,129,130,131,132,133,134,135,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,188,189,190,193,195,200,202,203,204,207,211,213,214,219,221,222,228,230,231,232,233,234,235,240,246,247,248,250,251,252,255,256,257,],[-3,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-30,-31,-32,-2,-4,-18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,-36,-72,-85,-84,-105,170,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,189,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-38,-34,-19,-107,-112,-65,-42,221,222,228,-35,-93,-106,234,-56,-57,-62,-37,-92,-111,240,-21,-53,-20,250,251,252,-55,-58,-59,256,-56,-54,]),'SEMI_COLON':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,25,26,27,46,47,48,57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,90,91,94,95,102,111,112,119,126,127,128,129,130,131,132,133,134,135,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,183,184,188,189,190,193,200,202,209,213,214,221,222,228,230,231,234,235,240,250,251,252,256,257,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,-30,-31,-32,-39,-41,-45,-33,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,-23,-108,-109,139,140,-72,-85,-84,-105,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-45,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,205,206,-38,-34,31,-107,-65,-42,-43,-93,-106,-56,-57,-62,-37,-92,-21,-53,-20,-55,-58,-59,-56,-54,]),'PUNTO':([18,67,69,70,71,72,73,74,75,76,77,78,88,119,135,166,169,170,193,214,],[45,117,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,-105,-22,-103,-113,-110,-107,-106,]),'IGUAL':([20,48,98,127,128,129,130,131,132,133,142,209,226,],[49,85,49,-50,179,-46,-47,-48,-49,-51,85,179,49,]),'L_PAREN':([20,21,22,23,27,49,50,53,54,60,63,65,68,72,79,81,82,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,158,159,160,161,162,163,164,165,167,172,179,186,191,201,215,229,241,245,],[50,53,54,55,68,68,68,68,68,68,68,68,68,50,68,124,125,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,191,-114,-115,-116,-117,-118,-119,-120,68,68,68,68,68,68,68,68,245,68,]),'MAS':([20,27,49,50,51,53,54,60,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,100,101,103,104,105,106,107,108,109,110,111,112,119,120,125,135,136,139,140,146,147,148,149,150,151,152,153,154,155,156,157,166,167,169,170,172,179,186,191,193,201,213,214,215,226,229,231,245,],[51,63,63,63,90,63,63,63,109,-83,-86,-91,63,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,63,63,-23,63,63,63,63,63,63,63,63,63,63,-85,-84,-105,63,63,-22,63,63,63,109,109,109,109,109,109,-81,-82,-87,-88,-89,-90,-103,63,-113,-110,63,63,63,63,-107,63,-93,-106,63,51,63,-92,63,]),'MENOS':([20,27,49,50,52,53,54,60,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,100,101,103,104,105,106,107,108,109,110,111,112,119,120,125,135,136,139,140,146,147,148,149,150,151,152,153,154,155,156,157,166,167,169,170,172,179,186,191,193,201,213,214,215,226,229,231,245,],[52,65,65,65,91,65,65,65,110,-83,-86,-91,65,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,65,65,-23,65,65,65,65,65,65,65,65,65,65,-85,-84,-105,65,65,-22,65,65,65,110,110,110,110,110,110,-81,-82,-87,-88,-89,-90,-103,65,-113,-110,65,65,65,65,-107,65,-93,-106,65,52,65,-92,65,]),'NOT':([27,49,50,53,54,68,79,85,100,101,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ENTERO':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'DECIMAL':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'CADENA':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TRUE':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FALSE':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'L_CORCHETE':([27,49,50,53,54,60,63,65,68,72,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,119,120,125,136,139,140,167,172,179,186,191,193,201,214,215,229,245,],[79,79,79,79,79,79,79,79,79,120,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,167,79,79,79,79,79,79,79,79,79,79,-107,79,-106,79,79,79,]),'L_LLAVE':([27,49,50,53,54,56,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,137,138,139,140,141,167,172,175,179,186,191,197,201,215,229,236,237,238,245,253,],[80,80,80,80,80,99,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,181,182,80,80,185,80,80,199,80,80,80,217,80,80,80,242,243,244,80,254,]),'LOG':([45,],[82,]),'COMA':([46,47,48,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,87,88,89,102,111,112,119,121,122,126,127,128,129,130,131,132,133,134,135,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,173,174,176,177,178,180,193,195,202,209,212,213,214,216,218,220,231,232,],[83,-41,-45,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,136,-23,-25,-72,-85,-84,-105,136,171,-40,-50,-43,-46,-47,-48,-49,-51,-44,-22,-45,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-29,198,-27,201,-67,-24,-107,-112,-42,-43,201,-93,-106,-28,-26,-66,-92,-111,]),'COLON':([48,123,142,173,188,194,],[84,172,187,196,210,215,]),'R_PAREN':([50,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,96,102,111,112,118,119,124,127,129,130,131,132,133,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,173,174,176,177,178,180,191,193,208,212,213,214,216,218,220,223,224,225,227,231,239,249,],[88,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-52,135,-23,-25,-108,-109,137,138,141,-72,-85,-84,166,-105,175,-50,-46,-47,-48,-49,-51,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-29,197,-27,200,-67,-24,213,-107,-63,231,-93,-106,-28,-26,-66,237,-60,-61,238,-92,-64,253,]),'OR':([57,58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,86,88,89,92,93,102,111,112,118,119,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,168,169,170,178,180,183,184,192,193,195,202,208,213,214,220,231,232,239,249,],[100,-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,100,-23,100,100,100,-72,-85,-84,100,-105,100,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,100,-113,-110,100,100,100,100,100,-107,100,100,100,-93,-106,100,-92,100,100,100,]),'R_CORCHETE':([58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,89,102,111,112,119,121,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,168,169,170,180,192,193,213,214,231,],[-69,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,-25,-72,-85,-84,-105,169,-22,-68,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,193,-113,-110,-24,214,-107,-93,-106,-92,]),'AND':([58,59,61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[101,-71,-73,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,-72,-85,-84,-105,-22,101,-70,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'DISTINTO_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[103,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,103,-85,-84,-105,-22,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'MENOR_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[104,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,104,-85,-84,-105,-22,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'MENOR_IGUAL_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[105,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,105,-85,-84,-105,-22,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'MAYOR_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[106,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,106,-85,-84,-105,-22,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'MAYOR_IGUAL_QUE':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[107,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,107,-85,-84,-105,-22,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'TRIPLE_IGUAL':([61,62,64,66,67,69,70,71,72,73,74,75,76,77,78,88,102,111,112,119,135,146,147,148,149,150,151,152,153,154,155,156,157,166,169,170,193,213,214,231,],[108,-80,-83,-86,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,108,-85,-84,-105,-22,-74,-75,-76,-77,-78,-79,-81,-82,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'TIMES':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,135,154,155,156,157,166,169,170,193,213,214,231,],[113,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,113,113,-105,-22,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'DIVIDE':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,135,154,155,156,157,166,169,170,193,213,214,231,],[114,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,114,114,-105,-22,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'MOD':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,135,154,155,156,157,166,169,170,193,213,214,231,],[115,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,115,115,-105,-22,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'POTENCIA':([66,67,69,70,71,72,73,74,75,76,77,78,88,111,112,119,135,154,155,156,157,166,169,170,193,213,214,231,],[116,-91,-94,-95,-96,-97,-98,-99,-100,-101,-102,-104,-23,116,116,-105,-22,-87,-88,-89,-90,-103,-113,-110,-107,-93,-106,-92,]),'NUMBER':([84,187,196,210,],[129,129,129,129,]),'STRING':([84,187,196,210,],[130,130,130,130,]),'BOOLEAN':([84,187,196,210,],[131,131,131,131,]),'ANY':([84,187,196,210,],[132,132,132,132,]),'NULL':([84,187,196,210,],[133,133,133,133,]),'TOSTRING':([117,],[159,]),'TOFIXED':([117,],[160,]),'TOEXPONENTIAL':([117,],[161,]),'TOLOWERCASE':([117,],[162,]),'TOUPPERCASE':([117,],[163,]),'SPLIT':([117,],[164,]),'CONCAT':([117,],[165,]),'OF':([127,129,130,131,132,133,142,209,],[-50,-46,-47,-48,-49,-51,186,229,]),'ELSE':([221,256,],[236,236,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,181,182,185,199,217,242,243,244,254,],[2,203,204,207,219,233,246,247,248,255,]),'instruccion':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[3,29,3,3,3,3,29,29,29,3,29,29,3,3,3,29,29,29,3,29,]),'console_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration_instruction':([0,2,55,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[5,5,94,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assig_pro':([0,2,55,181,182,185,199,203,204,205,206,207,217,219,233,242,243,244,246,247,248,254,255,],[6,6,95,6,6,6,6,6,6,224,224,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_each_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'interface_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'continue_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'break_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function_pro':([0,2,181,182,185,199,203,204,207,217,219,233,242,243,244,246,247,248,254,255,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'call_function_pro':([0,2,27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,181,182,185,186,191,199,201,203,204,207,215,217,219,229,233,242,243,244,245,246,247,248,254,255,],[16,16,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,16,16,16,75,75,16,75,16,16,16,75,16,16,75,16,16,16,16,75,16,16,16,16,16,]),'sumadores':([0,2,181,182,185,199,203,204,205,206,207,217,219,233,242,243,244,246,247,248,254,255,],[17,17,17,17,17,17,17,17,225,225,17,17,17,17,17,17,17,17,17,17,17,17,]),'sc':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,190,],[30,32,33,34,35,36,37,38,39,40,41,42,43,44,211,]),'declaracion_list':([19,97,],[46,46,]),'assignacion_instruction':([19,83,97,],[47,126,47,]),'a':([27,49,50,53,54,68,79,85,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[57,86,89,92,93,118,89,134,168,178,180,183,184,192,195,202,208,178,220,232,239,249,]),'b':([27,49,50,53,54,68,79,85,100,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[58,58,58,58,58,58,58,58,144,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'c':([27,49,50,53,54,68,79,85,100,101,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[59,59,59,59,59,59,59,59,59,145,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'d':([27,49,50,53,54,60,68,79,85,100,101,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[61,61,61,61,61,102,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'e':([27,49,50,53,54,60,68,79,85,100,101,103,104,105,106,107,108,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[62,62,62,62,62,62,62,62,62,62,62,146,147,148,149,150,151,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'f':([27,49,50,53,54,60,68,79,85,100,101,103,104,105,106,107,108,109,110,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,152,153,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'g':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[66,66,66,66,66,66,111,112,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'h':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,154,155,156,157,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_pro':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'interface_assi':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'array_val_pro':([27,49,50,53,54,60,63,65,68,79,85,100,101,103,104,105,106,107,108,109,110,113,114,115,116,120,125,136,139,140,167,172,179,186,191,201,215,229,245,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'values':([50,79,],[87,121,]),'for_each_dec':([55,],[96,]),'dimensions':([72,],[119,]),'atributos_assi':([80,],[122,]),'type':([84,187,196,210,],[128,209,216,230,]),'interface_atributos':([99,],[143,]),'nativeFun':([117,],[158,]),'parameters_pro':([124,],[174,]),'parameter_pro':([124,198,],[176,218,]),'expresion':([125,191,],[177,212,]),'interface_atributo':([143,],[190,]),'inDec_pro':([205,206,],[223,227,]),'else_pro':([221,256,],[235,257,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',286),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',290),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',297),
  ('instruccion -> console_pro sc','instruccion',2,'p_instruccion','grammar.py',304),
  ('instruccion -> declaration_instruction sc','instruccion',2,'p_instruccion','grammar.py',305),
  ('instruccion -> assig_pro sc','instruccion',2,'p_instruccion','grammar.py',306),
  ('instruccion -> if_pro sc','instruccion',2,'p_instruccion','grammar.py',307),
  ('instruccion -> while_pro sc','instruccion',2,'p_instruccion','grammar.py',308),
  ('instruccion -> for_pro sc','instruccion',2,'p_instruccion','grammar.py',309),
  ('instruccion -> for_each_pro sc','instruccion',2,'p_instruccion','grammar.py',310),
  ('instruccion -> interface_pro sc','instruccion',2,'p_instruccion','grammar.py',311),
  ('instruccion -> continue_pro sc','instruccion',2,'p_instruccion','grammar.py',312),
  ('instruccion -> break_pro sc','instruccion',2,'p_instruccion','grammar.py',313),
  ('instruccion -> return_pro sc','instruccion',2,'p_instruccion','grammar.py',314),
  ('instruccion -> function_pro sc','instruccion',2,'p_instruccion','grammar.py',315),
  ('instruccion -> call_function_pro sc','instruccion',2,'p_instruccion','grammar.py',316),
  ('instruccion -> sumadores sc','instruccion',2,'p_instruccion','grammar.py',317),
  ('sc -> SEMI_COLON','sc',1,'p_semi_colon','grammar.py',321),
  ('sc -> <empty>','sc',0,'p_semi_colon','grammar.py',322),
  ('function_pro -> FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',8,'p_instruccion_function','grammar.py',327),
  ('function_pro -> FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVE','function_pro',7,'p_instruccion_function2','grammar.py',331),
  ('call_function_pro -> LITERAL L_PAREN values R_PAREN','call_function_pro',4,'p_instruccion_call_function','grammar.py',336),
  ('call_function_pro -> LITERAL L_PAREN R_PAREN','call_function_pro',3,'p_instruccion_call_function2','grammar.py',340),
  ('values -> values COMA a','values',3,'p_instruccion_values','grammar.py',350),
  ('values -> a','values',1,'p_instruccion_values2','grammar.py',353),
  ('parameters_pro -> parameters_pro COMA parameter_pro','parameters_pro',3,'p_instruccion_parameters','grammar.py',358),
  ('parameters_pro -> parameter_pro','parameters_pro',1,'p_instruccion_parameters2','grammar.py',365),
  ('parameter_pro -> LITERAL COLON type','parameter_pro',3,'p_instruccion_parameter','grammar.py',372),
  ('parameter_pro -> LITERAL','parameter_pro',1,'p_instruccion_parameter2','grammar.py',378),
  ('continue_pro -> CONTINUE','continue_pro',1,'p_instruccion_continue','grammar.py',384),
  ('break_pro -> BREAK','break_pro',1,'p_instruccion_break','grammar.py',388),
  ('return_pro -> RETURN','return_pro',1,'p_instruccion_return','grammar.py',391),
  ('return_pro -> RETURN a','return_pro',2,'p_instruccion_return2','grammar.py',395),
  ('interface_pro -> INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVE','interface_pro',5,'p_instruccion_declarationInterface','grammar.py',401),
  ('interface_atributos -> interface_atributos interface_atributo sc','interface_atributos',3,'p_instruccion_interfaceAtributos','grammar.py',405),
  ('interface_atributos -> <empty>','interface_atributos',0,'p_instruccion_interfaceAtributos2','grammar.py',410),
  ('interface_atributo -> LITERAL COLON type','interface_atributo',3,'p_intruccion_interfaceAtributo','grammar.py',414),
  ('interface_atributo -> LITERAL','interface_atributo',1,'p_instruccion_interfaceAtributo2','grammar.py',419),
  ('declaration_instruction -> LET declaracion_list','declaration_instruction',2,'p_instruccion_declarationInstruction','grammar.py',425),
  ('declaracion_list -> declaracion_list COMA assignacion_instruction','declaracion_list',3,'p_instruccion_declaracion_list','grammar.py',431),
  ('declaracion_list -> assignacion_instruction','declaracion_list',1,'p_instruccion_declaracion_list2','grammar.py',441),
  ('assignacion_instruction -> LITERAL COLON type IGUAL a','assignacion_instruction',5,'p_instruccion_assignacion_instruction','grammar.py',448),
  ('assignacion_instruction -> LITERAL COLON type','assignacion_instruction',3,'p_instruccion_assingnacion_instruction2','grammar.py',452),
  ('assignacion_instruction -> LITERAL IGUAL a','assignacion_instruction',3,'p_instruccion_assignacion_instruction3','grammar.py',456),
  ('assignacion_instruction -> LITERAL','assignacion_instruction',1,'p_instruccion_assignacion_instruction4','grammar.py',460),
  ('type -> NUMBER','type',1,'p_instruccion_type','grammar.py',463),
  ('type -> STRING','type',1,'p_instruccion_type','grammar.py',464),
  ('type -> BOOLEAN','type',1,'p_instruccion_type','grammar.py',465),
  ('type -> ANY','type',1,'p_instruccion_type','grammar.py',466),
  ('type -> LITERAL','type',1,'p_instruccion_type','grammar.py',467),
  ('type -> NULL','type',1,'p_instruccion_type','grammar.py',468),
  ('assig_pro -> LITERAL IGUAL a','assig_pro',3,'p_instruccion_assig_pro','grammar.py',472),
  ('if_pro -> IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','if_pro',8,'p_instruccion_if_pro','grammar.py',476),
  ('else_pro -> ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro','else_pro',9,'p_instruccion_else_pro','grammar.py',482),
  ('else_pro -> ELSE L_LLAVE instrucciones R_LLAVE','else_pro',4,'p_instruccion_else_pro2','grammar.py',486),
  ('else_pro -> <empty>','else_pro',0,'p_instruccion_else_pro3','grammar.py',490),
  ('while_pro -> WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE','while_pro',7,'p_instruccion_while_pro','grammar.py',495),
  ('for_pro -> FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',500),
  ('for_pro -> FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE','for_pro',11,'p_instruccion_for_pro','grammar.py',501),
  ('inDec_pro -> assig_pro','inDec_pro',1,'p_instruccion_in_dec_pro','grammar.py',509),
  ('inDec_pro -> sumadores','inDec_pro',1,'p_instruccion_in_dec_pro','grammar.py',510),
  ('for_each_pro -> FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVE','for_each_pro',7,'p_instruccion_for_each_pro','grammar.py',516),
  ('for_each_dec -> LET LITERAL OF a','for_each_dec',4,'p_instruccion_fore_dec','grammar.py',519),
  ('for_each_dec -> LET LITERAL COLON type OF a','for_each_dec',6,'p_instruccion_fore_dec_type','grammar.py',522),
  ('console_pro -> CONSOLE PUNTO LOG L_PAREN expresion R_PAREN','console_pro',6,'p_instruccion_console','grammar.py',527),
  ('expresion -> expresion COMA a','expresion',3,'p_instruccion_expresion','grammar.py',532),
  ('expresion -> a','expresion',1,'p_instruccion_expresion2','grammar.py',536),
  ('a -> a OR b','a',3,'p_instruccion_expresion3','grammar.py',541),
  ('a -> b','a',1,'p_instruccion_expresion4','grammar.py',544),
  ('b -> b AND c','b',3,'p_instruccion_expresion5','grammar.py',548),
  ('b -> c','b',1,'p_instruccion_expresion6','grammar.py',552),
  ('c -> NOT d','c',2,'p_instruccion_expresion7','grammar.py',556),
  ('c -> d','c',1,'p_instruccion_expresion8','grammar.py',560),
  ('d -> d DISTINTO_QUE e','d',3,'p_instruccion_expresion9','grammar.py',564),
  ('d -> d MENOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',565),
  ('d -> d MENOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',566),
  ('d -> d MAYOR_QUE e','d',3,'p_instruccion_expresion9','grammar.py',567),
  ('d -> d MAYOR_IGUAL_QUE e','d',3,'p_instruccion_expresion9','grammar.py',568),
  ('d -> d TRIPLE_IGUAL e','d',3,'p_instruccion_expresion9','grammar.py',569),
  ('d -> e','d',1,'p_instruccion_expresion10','grammar.py',573),
  ('e -> e MAS f','e',3,'p_instruccion_expresion11','grammar.py',577),
  ('e -> e MENOS f','e',3,'p_instruccion_expresion11','grammar.py',578),
  ('e -> f','e',1,'p_instruccion_expresion12','grammar.py',582),
  ('f -> MENOS g','f',2,'p_instruccion_expresion13','grammar.py',586),
  ('f -> MAS g','f',2,'p_instruccion_expresion13','grammar.py',587),
  ('f -> g','f',1,'p_instruccion_expresion14','grammar.py',594),
  ('g -> g TIMES h','g',3,'p_instruccion_expresion15','grammar.py',598),
  ('g -> g DIVIDE h','g',3,'p_instruccion_expresion15','grammar.py',599),
  ('g -> g MOD h','g',3,'p_instruccion_expresion15','grammar.py',600),
  ('g -> g POTENCIA h','g',3,'p_instruccion_expresion15','grammar.py',601),
  ('g -> h','g',1,'p_instruccion_expresion16','grammar.py',605),
  ('g -> h PUNTO nativeFun L_PAREN expresion R_PAREN','g',6,'p_instruccion_expresion17','grammar.py',609),
  ('g -> h PUNTO nativeFun L_PAREN R_PAREN','g',5,'p_instruccion_expresion17','grammar.py',610),
  ('h -> ENTERO','h',1,'p_instruccion_expresion18','grammar.py',619),
  ('h -> DECIMAL','h',1,'p_instruccion_expresion19','grammar.py',623),
  ('h -> CADENA','h',1,'p_instruccion_expresion20','grammar.py',627),
  ('h -> LITERAL','h',1,'p_instruccion_expresion21','grammar.py',631),
  ('h -> TRUE','h',1,'p_instruccion_expresion22','grammar.py',635),
  ('h -> FALSE','h',1,'p_instruccion_expresion22','grammar.py',636),
  ('h -> call_function_pro','h',1,'p_instruccion_expresion23','grammar.py',640),
  ('h -> array_pro','h',1,'p_instruccion_expresion23','grammar.py',641),
  ('h -> interface_assi','h',1,'p_instruccion_expresion23','grammar.py',642),
  ('h -> L_PAREN a R_PAREN','h',3,'p_instruccion_expresion24','grammar.py',645),
  ('h -> array_val_pro','h',1,'p_instruccion_expresion25','grammar.py',649),
  ('array_val_pro -> LITERAL dimensions','array_val_pro',2,'p_instruccion_array_val_pro','grammar.py',652),
  ('dimensions -> dimensions L_CORCHETE a R_CORCHETE','dimensions',4,'p_instruccion_dimensions','grammar.py',655),
  ('dimensions -> L_CORCHETE a R_CORCHETE','dimensions',3,'p_instruccion_dimensions2','grammar.py',658),
  ('sumadores -> LITERAL MAS MAS','sumadores',3,'p_instruccion_sumadores','grammar.py',661),
  ('sumadores -> LITERAL MENOS MENOS','sumadores',3,'p_instruccion_sumadores','grammar.py',662),
  ('interface_assi -> L_LLAVE atributos_assi R_LLAVE','interface_assi',3,'p_instruccion_interfaceAssi','grammar.py',671),
  ('atributos_assi -> atributos_assi COMA LITERAL COLON a','atributos_assi',5,'p_instruccion_inter_atributesAssi','grammar.py',676),
  ('atributos_assi -> LITERAL COLON a','atributos_assi',3,'p_instruccion_inter_atributesAssi2','grammar.py',679),
  ('array_pro -> L_CORCHETE values R_CORCHETE','array_pro',3,'p_instruccion_array_pro','grammar.py',683),
  ('nativeFun -> TOSTRING','nativeFun',1,'p_instruccion_nativas','grammar.py',690),
  ('nativeFun -> TOFIXED','nativeFun',1,'p_instruccion_nativas','grammar.py',691),
  ('nativeFun -> TOEXPONENTIAL','nativeFun',1,'p_instruccion_nativas','grammar.py',692),
  ('nativeFun -> TOLOWERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',693),
  ('nativeFun -> TOUPPERCASE','nativeFun',1,'p_instruccion_nativas','grammar.py',694),
  ('nativeFun -> SPLIT','nativeFun',1,'p_instruccion_nativas','grammar.py',695),
  ('nativeFun -> CONCAT','nativeFun',1,'p_instruccion_nativas','grammar.py',696),
]
