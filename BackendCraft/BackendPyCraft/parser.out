Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TOUPPERCASE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> console_pro sc
Rule 5     instruccion -> declaration_instruction sc
Rule 6     instruccion -> assig_pro sc
Rule 7     instruccion -> if_pro sc
Rule 8     instruccion -> while_pro sc
Rule 9     instruccion -> for_pro sc
Rule 10    instruccion -> for_each_pro sc
Rule 11    instruccion -> interface_pro sc
Rule 12    instruccion -> continue_pro sc
Rule 13    instruccion -> break_pro sc
Rule 14    instruccion -> return_pro sc
Rule 15    instruccion -> function_pro sc
Rule 16    instruccion -> call_function_pro sc
Rule 17    instruccion -> sumadores sc
Rule 18    sc -> SEMI_COLON
Rule 19    sc -> <empty>
Rule 20    function_pro -> FUNCTION LITERAL L_PAREN parameters_pro R_PAREN L_LLAVE instrucciones R_LLAVE
Rule 21    function_pro -> FUNCTION LITERAL L_PAREN R_PAREN L_LLAVE instrucciones R_LLAVE
Rule 22    call_function_pro -> LITERAL L_PAREN values R_PAREN
Rule 23    call_function_pro -> LITERAL L_PAREN R_PAREN
Rule 24    values -> values COMA a
Rule 25    values -> a
Rule 26    parameters_pro -> parameters_pro COMA parameter_pro
Rule 27    parameters_pro -> parameter_pro
Rule 28    parameter_pro -> LITERAL COLON type
Rule 29    parameter_pro -> LITERAL
Rule 30    continue_pro -> CONTINUE
Rule 31    break_pro -> BREAK
Rule 32    return_pro -> RETURN
Rule 33    return_pro -> RETURN a
Rule 34    interface_pro -> INTERFACE LITERAL L_LLAVE interface_atributos R_LLAVE
Rule 35    interface_atributos -> interface_atributos interface_atributo sc
Rule 36    interface_atributos -> <empty>
Rule 37    interface_atributo -> LITERAL COLON type
Rule 38    interface_atributo -> LITERAL
Rule 39    declaration_instruction -> LET declaracion_list
Rule 40    declaracion_list -> declaracion_list COMA assignacion_instruction
Rule 41    declaracion_list -> assignacion_instruction
Rule 42    assignacion_instruction -> LITERAL COLON type IGUAL a
Rule 43    assignacion_instruction -> LITERAL COLON type
Rule 44    assignacion_instruction -> LITERAL IGUAL a
Rule 45    assignacion_instruction -> LITERAL
Rule 46    type -> NUMBER
Rule 47    type -> STRING
Rule 48    type -> BOOLEAN
Rule 49    type -> ANY
Rule 50    type -> LITERAL
Rule 51    type -> NULL
Rule 52    assig_pro -> LITERAL IGUAL a
Rule 53    if_pro -> IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro
Rule 54    else_pro -> ELSE IF L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE else_pro
Rule 55    else_pro -> ELSE L_LLAVE instrucciones R_LLAVE
Rule 56    else_pro -> <empty>
Rule 57    while_pro -> WHILE L_PAREN a R_PAREN L_LLAVE instrucciones R_LLAVE
Rule 58    for_pro -> FOR L_PAREN declaration_instruction SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE
Rule 59    for_pro -> FOR L_PAREN assig_pro SEMI_COLON a SEMI_COLON inDec_pro R_PAREN L_LLAVE instrucciones R_LLAVE
Rule 60    inDec_pro -> assig_pro
Rule 61    inDec_pro -> sumadores
Rule 62    for_each_pro -> FOR L_PAREN for_each_dec R_PAREN L_LLAVE instrucciones R_LLAVE
Rule 63    for_each_dec -> LET LITERAL OF a
Rule 64    for_each_dec -> LET LITERAL COLON type OF a
Rule 65    console_pro -> CONSOLE PUNTO LOG L_PAREN expresion R_PAREN
Rule 66    expresion -> expresion COMA a
Rule 67    expresion -> a
Rule 68    a -> a OR b
Rule 69    a -> b
Rule 70    b -> b AND c
Rule 71    b -> c
Rule 72    c -> NOT d
Rule 73    c -> d
Rule 74    d -> d DISTINTO_QUE e
Rule 75    d -> d MENOR_QUE e
Rule 76    d -> d MENOR_IGUAL_QUE e
Rule 77    d -> d MAYOR_QUE e
Rule 78    d -> d MAYOR_IGUAL_QUE e
Rule 79    d -> d TRIPLE_IGUAL e
Rule 80    d -> e
Rule 81    e -> e MAS f
Rule 82    e -> e MENOS f
Rule 83    e -> f
Rule 84    f -> MENOS g
Rule 85    f -> MAS g
Rule 86    f -> g
Rule 87    g -> g TIMES h
Rule 88    g -> g DIVIDE h
Rule 89    g -> g MOD h
Rule 90    g -> g POTENCIA h
Rule 91    g -> h
Rule 92    g -> h PUNTO nativeFun L_PAREN expresion R_PAREN
Rule 93    g -> h PUNTO nativeFun L_PAREN R_PAREN
Rule 94    h -> ENTERO
Rule 95    h -> DECIMAL
Rule 96    h -> CADENA
Rule 97    h -> LITERAL
Rule 98    h -> TRUE
Rule 99    h -> FALSE
Rule 100   h -> call_function_pro
Rule 101   h -> array_pro
Rule 102   h -> interface_assi
Rule 103   h -> L_PAREN a R_PAREN
Rule 104   h -> array_val_pro
Rule 105   array_val_pro -> LITERAL dimensions
Rule 106   dimensions -> dimensions L_CORCHETE a R_CORCHETE
Rule 107   dimensions -> L_CORCHETE a R_CORCHETE
Rule 108   sumadores -> LITERAL MAS MAS
Rule 109   sumadores -> LITERAL MENOS MENOS
Rule 110   interface_assi -> L_LLAVE atributos_assi R_LLAVE
Rule 111   atributos_assi -> atributos_assi COMA LITERAL COLON a
Rule 112   atributos_assi -> LITERAL COLON a
Rule 113   array_pro -> L_CORCHETE values R_CORCHETE
Rule 114   nativeFun -> TOSTRING
Rule 115   nativeFun -> TOFIXED
Rule 116   nativeFun -> TOEXPONENTIAL
Rule 117   nativeFun -> TOLOWERCASE
Rule 118   nativeFun -> TOUPPERCASEvalue
Rule 119   nativeFun -> SPLIT
Rule 120   nativeFun -> CONCAT

Terminals, with rules where they appear

AND                  : 70
ANY                  : 49
BOOLEAN              : 48
BREAK                : 31
CADENA               : 96
COLON                : 28 37 42 43 64 111 112
COMA                 : 24 26 40 66 111
CONCAT               : 120
CONSOLE              : 65
CONTINUE             : 30
DECIMAL              : 95
DISTINTO_QUE         : 74
DIVIDE               : 88
ELSE                 : 54 55
ENTERO               : 94
FALSE                : 99
FOR                  : 58 59 62
FUNCTION             : 20 21
IF                   : 53 54
IGUAL                : 42 44 52
INTERFACE            : 34
LET                  : 39 63 64
LITERAL              : 20 21 22 23 28 29 34 37 38 42 43 44 45 50 52 63 64 97 105 108 109 111 112
LOG                  : 65
L_CORCHETE           : 106 107 113
L_LLAVE              : 20 21 34 53 54 55 57 58 59 62 110
L_PAREN              : 20 21 22 23 53 54 57 58 59 62 65 92 93 103
MAS                  : 81 85 108 108
MAYOR_IGUAL_QUE      : 78
MAYOR_QUE            : 77
MENOR_IGUAL_QUE      : 76
MENOR_QUE            : 75
MENOS                : 82 84 109 109
MOD                  : 89
NOT                  : 72
NULL                 : 51
NUMBER               : 46
OF                   : 63 64
OR                   : 68
POTENCIA             : 90
PUNTO                : 65 92 93
RETURN               : 32 33
R_CORCHETE           : 106 107 113
R_LLAVE              : 20 21 34 53 54 55 57 58 59 62 110
R_PAREN              : 20 21 22 23 53 54 57 58 59 62 65 92 93 103
SEMI_COLON           : 18 58 58 59 59
SPLIT                : 119
STRING               : 47
TIMES                : 87
TOEXPONENTIAL        : 116
TOFIXED              : 115
TOLOWERCASE          : 117
TOSTRING             : 114
TOUPPERCASE          : 
TRIPLE_IGUAL         : 79
TRUE                 : 98
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

TOUPPERCASEvalue     : 118
a                    : 24 25 33 42 44 52 53 54 57 58 59 63 64 66 67 68 103 106 107 111 112
array_pro            : 101
array_val_pro        : 104
assig_pro            : 6 59 60
assignacion_instruction : 40 41
atributos_assi       : 110 111
b                    : 68 69 70
break_pro            : 13
c                    : 70 71
call_function_pro    : 16 100
console_pro          : 4
continue_pro         : 12
d                    : 72 73 74 75 76 77 78 79
declaracion_list     : 39 40
declaration_instruction : 5 58
dimensions           : 105 106
e                    : 74 75 76 77 78 79 80 81 82
else_pro             : 53 54
expresion            : 65 66 92
f                    : 81 82 83
for_each_dec         : 62
for_each_pro         : 10
for_pro              : 9
function_pro         : 15
g                    : 84 85 86 87 88 89 90
h                    : 87 88 89 90 91 92 93
if_pro               : 7
inDec_pro            : 58 59
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 20 21 53 54 55 57 58 59 62
interface_assi       : 102
interface_atributo   : 35
interface_atributos  : 34 35
interface_pro        : 11
nativeFun            : 92 93
parameter_pro        : 26 27
parameters_pro       : 20 26
return_pro           : 14
sc                   : 4 5 6 7 8 9 10 11 12 13 14 15 16 17 35
sumadores            : 17 61
type                 : 28 37 42 43 64
values               : 22 24 113
while_pro            : 8

